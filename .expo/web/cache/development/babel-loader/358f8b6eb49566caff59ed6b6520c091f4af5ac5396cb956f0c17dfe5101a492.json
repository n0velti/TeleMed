{"ast":null,"code":"\"use strict\";\n'use client';\n\nvar _reactJsxDevRuntime = require(\"react/jsx-dev-runtime\");\nvar _objectWithoutPropertiesLoose = require(\"@babel/runtime/helpers/objectWithoutPropertiesLoose\");\nconst _excluded = [\"unstable_keepPresented\", \"onPress\"],\n  _excluded2 = [\"width\", \"height\"];\nvar _jsxFileName = \"/Users/edward/Documents/TeleMed/TeleMed/node_modules/expo-router/build/link/elements.js\";\nvar __createBinding = this && this.__createBinding || (Object.create ? function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  var desc = Object.getOwnPropertyDescriptor(m, k);\n  if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n    desc = {\n      enumerable: true,\n      get: function () {\n        return m[k];\n      }\n    };\n  }\n  Object.defineProperty(o, k2, desc);\n} : function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  o[k2] = m[k];\n});\nvar __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function (o, v) {\n  Object.defineProperty(o, \"default\", {\n    enumerable: true,\n    value: v\n  });\n} : function (o, v) {\n  o[\"default\"] = v;\n});\nvar __importStar = this && this.__importStar || function () {\n  var ownKeys = function (o) {\n    ownKeys = Object.getOwnPropertyNames || function (o) {\n      var ar = [];\n      for (var k in o) if (Object.prototype.hasOwnProperty.call(o, k)) ar[ar.length] = k;\n      return ar;\n    };\n    return ownKeys(o);\n  };\n  return function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k = ownKeys(mod), i = 0; i < k.length; i++) if (k[i] !== \"default\") __createBinding(result, mod, k[i]);\n    __setModuleDefault(result, mod);\n    return result;\n  };\n}();\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.LinkMenu = void 0;\nexports.LinkMenuAction = LinkMenuAction;\nexports.LinkPreview = LinkPreview;\nexports.LinkTrigger = LinkTrigger;\nconst react_1 = __importStar(require(\"react\"));\nconst InternalLinkPreviewContext_1 = require(\"./InternalLinkPreviewContext\");\nconst HrefPreview_1 = require(\"./preview/HrefPreview\");\nconst PreviewRouteContext_1 = require(\"./preview/PreviewRouteContext\");\nconst native_1 = require(\"./preview/native\");\nconst Slot_1 = require(\"../ui/Slot\");\nfunction LinkMenuAction(props) {\n  if ((0, PreviewRouteContext_1.useIsPreview)() || true || !(0, react_1.use)(InternalLinkPreviewContext_1.InternalLinkPreviewContext)) {\n    return null;\n  }\n  const {\n      unstable_keepPresented,\n      onPress\n    } = props,\n    rest = _objectWithoutPropertiesLoose(props, _excluded);\n  return _reactJsxDevRuntime.jsxDEV(native_1.NativeLinkPreviewAction, Object.assign({}, rest, {\n    onSelected: onPress,\n    keepPresented: unstable_keepPresented\n  }), void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 13\n  }, this);\n}\n_c = LinkMenuAction;\nconst LinkMenu = props => {\n  if ((0, PreviewRouteContext_1.useIsPreview)() || true || !(0, react_1.use)(InternalLinkPreviewContext_1.InternalLinkPreviewContext)) {\n    return null;\n  }\n  const children = react_1.default.Children.toArray(props.children).filter(child => (0, react_1.isValidElement)(child) && (child.type === LinkMenuAction || child.type === exports.LinkMenu));\n  return _reactJsxDevRuntime.jsxDEV(native_1.NativeLinkPreviewAction, Object.assign({}, props, {\n    title: props.title ?? '',\n    onSelected: () => {},\n    children: children\n  }), void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 85,\n    columnNumber: 13\n  }, this);\n};\n_c2 = LinkMenu;\nexports.LinkMenu = LinkMenu;\nfunction LinkPreview(props) {\n  const {\n    children,\n    style\n  } = props;\n  const internalPreviewContext = (0, react_1.use)(InternalLinkPreviewContext_1.InternalLinkPreviewContext);\n  if ((0, PreviewRouteContext_1.useIsPreview)() || true || !internalPreviewContext) {\n    return null;\n  }\n  const {\n    isVisible,\n    href\n  } = internalPreviewContext;\n  const _ref = style ?? {},\n    {\n      width,\n      height\n    } = _ref,\n    restOfStyle = _objectWithoutPropertiesLoose(_ref, _excluded2);\n  const contentSize = {\n    width: width ?? 0,\n    height: height ?? 0\n  };\n  let content;\n  if (children) {\n    content = isVisible ? children : null;\n  } else {\n    content = isVisible ? _reactJsxDevRuntime.jsxDEV(HrefPreview_1.HrefPreview, {\n      href: href\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 31\n    }, this) : null;\n  }\n  return _reactJsxDevRuntime.jsxDEV(native_1.NativeLinkPreviewContent, {\n    style: restOfStyle,\n    preferredContentSize: contentSize,\n    children: content\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 136,\n    columnNumber: 13\n  }, this);\n}\n_c3 = LinkPreview;\nfunction LinkTrigger(props) {\n  if (react_1.default.Children.count(props.children) > 1 || !(0, react_1.isValidElement)(props.children)) {\n    if (props && typeof props === 'object' && 'onPress' in props) {\n      throw new Error('When using Link.Trigger in an asChild Link, you must pass a single child element that will emit onPress event.');\n    }\n    return props.children;\n  }\n  return _reactJsxDevRuntime.jsxDEV(Slot_1.Slot, Object.assign({}, props), void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 168,\n    columnNumber: 12\n  }, this);\n}\n_c4 = LinkTrigger;\nvar _c, _c2, _c3, _c4;\n$RefreshReg$(_c, \"LinkMenuAction\");\n$RefreshReg$(_c2, \"LinkMenu\");\n$RefreshReg$(_c3, \"LinkPreview\");\n$RefreshReg$(_c4, \"LinkTrigger\");","map":{"version":3,"names":["_reactJsxDevRuntime","require","_objectWithoutPropertiesLoose","_excluded","_excluded2","_jsxFileName","exports","LinkMenuAction","LinkPreview","LinkTrigger","react_1","__importStar","InternalLinkPreviewContext_1","HrefPreview_1","PreviewRouteContext_1","native_1","Slot_1","props","useIsPreview","use","InternalLinkPreviewContext","unstable_keepPresented","onPress","rest","jsxDEV","NativeLinkPreviewAction","Object","assign","onSelected","keepPresented","fileName","lineNumber","columnNumber","_c","LinkMenu","children","default","Children","toArray","filter","child","isValidElement","type","title","_c2","style","internalPreviewContext","isVisible","href","_ref","width","height","restOfStyle","contentSize","content","HrefPreview","NativeLinkPreviewContent","preferredContentSize","_c3","count","Error","Slot","_c4","$RefreshReg$"],"sources":["/Users/edward/Documents/TeleMed/TeleMed/node_modules/expo-router/src/link/elements.tsx"],"sourcesContent":["'use client';\n\nimport React, { isValidElement, use, type PropsWithChildren, type ReactElement } from 'react';\nimport type { ViewStyle } from 'react-native';\nimport type { SFSymbol } from 'sf-symbols-typescript';\n\nimport { InternalLinkPreviewContext } from './InternalLinkPreviewContext';\nimport { HrefPreview } from './preview/HrefPreview';\nimport { useIsPreview } from './preview/PreviewRouteContext';\nimport { NativeLinkPreviewAction, NativeLinkPreviewContent } from './preview/native';\nimport { Slot } from '../ui/Slot';\n\nexport interface LinkMenuActionProps {\n  /**\n   * The title of the menu item.\n   */\n  title: string;\n  /**\n   * Optional SF Symbol displayed alongside the menu item.\n   */\n  icon?: SFSymbol;\n  /**\n   * If `true`, the menu item will be disabled and not selectable.\n   *\n   * @see [Apple documentation](https://developer.apple.com/documentation/uikit/uimenuelement/attributes/disabled) for more information.\n   */\n  disabled?: boolean;\n  /**\n   * If `true`, the menu item will be displayed as destructive.\n   *\n   * @see [Apple documentation](https://developer.apple.com/documentation/uikit/uimenuelement/attributes/destructive) for more information.\n   */\n  destructive?: boolean;\n  /**\n   * If `true`, the menu will be kept presented after the action is selected.\n   *\n   * This is marked as unstable, because when action is selected it will recreate the menu,\n   * which will close all opened submenus and reset the scroll position.\n   *\n   * @see [Apple documentation](https://developer.apple.com/documentation/uikit/uimenuelement/attributes/keepsmenupresented) for more information.\n   */\n  unstable_keepPresented?: boolean;\n  /**\n   * If `true`, the menu item will be displayed as selected.\n   */\n  isOn?: boolean;\n  onPress: () => void;\n}\n\n/**\n * This component renders a context menu action for a link.\n * It should only be used as a child of `Link.Menu` or `LinkMenu`.\n *\n * > **Note**: You can use the alias `Link.MenuAction` for this component.\n *\n * @platform ios\n */\nexport function LinkMenuAction(props: LinkMenuActionProps) {\n  if (useIsPreview() || process.env.EXPO_OS !== 'ios' || !use(InternalLinkPreviewContext)) {\n    return null;\n  }\n  const { unstable_keepPresented, onPress, ...rest } = props;\n  return (\n    <NativeLinkPreviewAction\n      {...rest}\n      onSelected={onPress}\n      keepPresented={unstable_keepPresented}\n    />\n  );\n}\n\nexport interface LinkMenuProps {\n  /**\n   * The title of the menu item\n   */\n  title?: string;\n  /**\n   * Optional SF Symbol displayed alongside the menu item.\n   */\n  icon?: string;\n  /**\n   * If `true`, the menu will be displayed as a palette.\n   * This means that the menu will be displayed as one row\n   *\n   * @see [Apple documentation](https://developer.apple.com/documentation/uikit/uimenu/options-swift.struct/displayaspalette) for more information.\n   */\n  displayAsPalette?: boolean;\n  /**\n   * If `true`, the menu will be displayed inline.\n   * This means that the menu will not be collapsed\n   *\n   * @see [Apple documentation](https://developer.apple.com/documentation/uikit/uimenu/options-swift.struct/displayinline) for more information.\n   */\n  displayInline?: boolean;\n  /**\n   * If `true`, the menu item will be displayed as destructive.\n   *\n   * @see [Apple documentation](https://developer.apple.com/documentation/uikit/uimenu/options-swift.struct/destructive) for more information.\n   */\n  destructive?: boolean;\n  children: ReactElement<LinkMenuActionProps> | ReactElement<LinkMenuActionProps>[];\n}\n\n/**\n * Groups context menu actions for a link.\n *\n * If multiple `Link.Menu` components are used within a single `Link`, only the first will be rendered.\n * Only `Link.MenuAction` and `LinkMenuAction` components are allowed as children.\n *\n * @example\n * ```tsx\n * <Link.Menu>\n *   <Link.MenuAction title=\"Action 1\" onPress={() => {}} />\n *   <Link.MenuAction title=\"Action 2\" onPress={() => {}} />\n * </Link.Menu>\n * ```\n *\n * > **Note**: You can use the alias `Link.Menu` for this component.\n *\n * @platform ios\n */\nexport const LinkMenu: React.FC<LinkMenuProps> = (props) => {\n  if (useIsPreview() || process.env.EXPO_OS !== 'ios' || !use(InternalLinkPreviewContext)) {\n    return null;\n  }\n  const children = React.Children.toArray(props.children).filter(\n    (child) => isValidElement(child) && (child.type === LinkMenuAction || child.type === LinkMenu)\n  );\n  return (\n    <NativeLinkPreviewAction\n      {...props}\n      title={props.title ?? ''}\n      onSelected={() => {}}\n      children={children}\n    />\n  );\n};\n\nexport type LinkPreviewStyle = Omit<ViewStyle, 'position' | 'width' | 'height'> & {\n  /**\n   * Sets the preferred width of the preview.\n   * If not set, full width of the screen will be used.\n   *\n   * This is only **preferred** width, the actual width may be different\n   */\n  width?: number;\n\n  /**\n   * Sets the preferred height of the preview.\n   * If not set, full height of the screen will be used.\n   *\n   * This is only **preferred** height, the actual height may be different\n   */\n  height?: number;\n};\n\nexport interface LinkPreviewProps {\n  children?: React.ReactNode;\n  /**\n   * Custom styles for the preview container.\n   *\n   * Note that some styles may not work, as they are limited or reset by the native view\n   */\n  style?: LinkPreviewStyle;\n}\n\n/**\n * A component used to render and customize the link preview.\n *\n * If `Link.Preview` is used without any props, it will render a preview of the `href` passed to the `Link`.\n *\n * If multiple `Link.Preview` components are used within a single `Link`, only the first one will be rendered.\n *\n * To customize the preview, you can pass custom content as children.\n *\n * @example\n * ```tsx\n * <Link href=\"/about\">\n *   <Link.Preview>\n *     <Text>Custom Preview Content</Text>\n *   </Link.Preview>\n * </Link>\n * ```\n *\n * @example\n * ```tsx\n * <Link href=\"/about\">\n *   <Link.Preview />\n * </Link>\n * ```\n *\n * > **Note**: You can use the alias `Link.Preview` for this component.\n *\n * @platform ios\n */\nexport function LinkPreview(props: LinkPreviewProps) {\n  const { children, style } = props;\n  const internalPreviewContext = use(InternalLinkPreviewContext);\n  if (useIsPreview() || process.env.EXPO_OS !== 'ios' || !internalPreviewContext) {\n    return null;\n  }\n  const { isVisible, href } = internalPreviewContext;\n  const { width, height, ...restOfStyle } = style ?? {};\n  const contentSize = {\n    width: width ?? 0,\n    height: height ?? 0,\n  };\n  let content: React.ReactNode;\n  if (children) {\n    content = isVisible ? children : null;\n  } else {\n    content = isVisible ? <HrefPreview href={href} /> : null;\n  }\n\n  return (\n    <NativeLinkPreviewContent style={restOfStyle} preferredContentSize={contentSize}>\n      {content}\n    </NativeLinkPreviewContent>\n  );\n}\n\nexport type LinkTriggerProps = PropsWithChildren;\n\n/**\n * Serves as the trigger for a link.\n * The content inside this component will be rendered as part of the base link.\n *\n * If multiple `Link.Trigger` components are used within a single `Link`, only the first will be rendered.\n *\n * @example\n * ```tsx\n * <Link href=\"/about\">\n *   <Link.Trigger>\n *     Trigger\n *   </Link.Trigger>\n * </Link>\n * ```\n *\n * > **Note**: You can use the alias `Link.Trigger` for this component.\n *\n * @platform ios\n */\nexport function LinkTrigger(props: LinkTriggerProps) {\n  if (React.Children.count(props.children) > 1 || !isValidElement(props.children)) {\n    // If onPress is passed, this means that Link passed props to this component.\n    // We can assume that asChild is used, so we throw an error, because link will not work in this case.\n    if (props && typeof props === 'object' && 'onPress' in props) {\n      throw new Error(\n        'When using Link.Trigger in an asChild Link, you must pass a single child element that will emit onPress event.'\n      );\n    }\n    return props.children;\n  }\n  return <Slot {...props} />;\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{"hasCjsExports":true},"sourceType":"script","externalDependencies":[]}