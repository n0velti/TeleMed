{"ast":null,"code":"\"use strict\";\n\nvar _reactJsxDevRuntime = require(\"react/jsx-dev-runtime\");\nvar _jsxFileName = \"/Users/edward/Documents/TeleMed/TeleMed/node_modules/expo-router/build/link/Link.js\";\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Redirect = exports.Link = void 0;\nconst ExpoLink_1 = require(\"./ExpoLink\");\nconst elements_1 = require(\"./elements\");\nconst href_1 = require(\"./href\");\nexports.Link = Object.assign(function Link(props) {\n  return _reactJsxDevRuntime.jsxDEV(ExpoLink_1.ExpoLink, Object.assign({}, props), void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 12\n  }, this);\n}, {\n  resolveHref: href_1.resolveHref,\n  Menu: elements_1.LinkMenu,\n  Trigger: elements_1.LinkTrigger,\n  Preview: elements_1.LinkPreview,\n  MenuAction: elements_1.LinkMenuAction\n});\nvar Redirect_1 = require(\"./Redirect\");\nObject.defineProperty(exports, \"Redirect\", {\n  enumerable: true,\n  get: function () {\n    return Redirect_1.Redirect;\n  }\n});","map":{"version":3,"names":["ExpoLink_1","require","elements_1","href_1","exports","Link","Object","assign","props","_reactJsxDevRuntime","jsxDEV","ExpoLink","fileName","_jsxFileName","lineNumber","columnNumber","resolveHref","Menu","LinkMenu","Trigger","LinkTrigger","Preview","LinkPreview","MenuAction","LinkMenuAction","Redirect_1","defineProperty","enumerable","get","Redirect"],"sources":["/Users/edward/Documents/TeleMed/TeleMed/node_modules/expo-router/src/link/Link.tsx"],"sourcesContent":["import { ExpoLink } from './ExpoLink';\nimport { LinkMenu, LinkMenuAction, LinkPreview, LinkTrigger } from './elements';\nimport { resolveHref } from './href';\nimport type { LinkProps, WebAnchorProps } from './useLinkHooks';\n\nexport const Link = Object.assign(\n  /**\n   * Component that renders a link using [`href`](#href) to another route.\n   * By default, it accepts children and wraps them in a `<Text>` component.\n   *\n   * Uses an anchor tag (`<a>`) on web and performs a client-side navigation to preserve\n   * the state of the website and navigate faster. The web-only attributes such as `target`,\n   * `rel`, and `download` are supported and passed to the anchor tag on web. See\n   * [`WebAnchorProps`](#webanchorprops) for more details.\n   *\n   * > **Note**: Client-side navigation works with both single-page apps,\n   * and [static-rendering](/router/reference/static-rendering/).\n   *\n   * @example\n   * ```tsx\n   * import { Link } from 'expo-router';\n   * import { View } from 'react-native';\n   *\n   * export default function Route() {\n   *  return (\n   *   <View>\n   *    <Link href=\"/about\">About</Link>\n   *   </View>\n   *  );\n   *}\n   * ```\n   */\n  function Link(props: LinkProps) {\n    // Re-exporting ExpoLink here so that Link.* can be used in server components.\n    return <ExpoLink {...props} />;\n  },\n  {\n    resolveHref,\n    Menu: LinkMenu,\n    Trigger: LinkTrigger,\n    Preview: LinkPreview,\n    MenuAction: LinkMenuAction,\n  }\n);\n\nexport type LinkComponent = typeof Link;\n\nexport { LinkProps, WebAnchorProps };\nexport { Redirect, RedirectProps } from './Redirect';\n"],"mappings":";;;;;;;;AAAA,MAAAA,UAAA,GAAAC,OAAA;AACA,MAAAC,UAAA,GAAAD,OAAA;AACA,MAAAE,MAAA,GAAAF,OAAA;AAGaG,OAAA,CAAAC,IAAI,GAAGC,MAAM,CAACC,MAAM,CA2B/B,SAASF,IAAIA,CAACG,KAAgB;EAE5B,OAAOC,mBAAA,CAAAC,MAAA,CAACV,UAAA,CAAAW,QAAQ,EAAAL,MAAA,CAAAC,MAAA,KAAKC,KAAK;IAAAI,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAC,CAAG;AAChC,CAAC,EACD;EACEC,WAAW,EAAXb,MAAA,CAAAa,WAAW;EACXC,IAAI,EAAEf,UAAA,CAAAgB,QAAQ;EACdC,OAAO,EAAEjB,UAAA,CAAAkB,WAAW;EACpBC,OAAO,EAAEnB,UAAA,CAAAoB,WAAW;EACpBC,UAAU,EAAErB,UAAA,CAAAsB;CACb,CACF;AAKD,IAAAC,UAAA,GAAAxB,OAAA;AAASK,MAAA,CAAAoB,cAAA,CAAAtB,OAAA;EAAAuB,UAAA;EAAAC,GAAA,WAAAA,CAAA;IAAA,OAAAH,UAAA,CAAAI,QAAQ;EAAA;AAAA","ignoreList":[]},"metadata":{"hasCjsExports":true},"sourceType":"script","externalDependencies":[]}