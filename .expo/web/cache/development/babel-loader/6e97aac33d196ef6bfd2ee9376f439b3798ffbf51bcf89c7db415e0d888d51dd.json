{"ast":null,"code":"var _jsxFileName = \"/Users/edward/Documents/TeleMed/TeleMed/node_modules/@expo/metro-runtime/src/error-overlay/toast/ErrorToastContainer.web.tsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { useCallback, useMemo } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { ErrorToast } from './ErrorToast';\nimport * as LogBoxData from '../Data/LogBoxData';\nimport { useLogs } from '../Data/LogContext';\nimport { useRejectionHandler } from '../useRejectionHandler';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function ErrorToastContainer() {\n  _s();\n  useRejectionHandler();\n  const {\n    logs,\n    isDisabled\n  } = useLogs();\n  if (!logs.length || isDisabled) {\n    return null;\n  }\n  return _jsxDEV(ErrorToastStack, {\n    logs: logs\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 10\n  }, this);\n}\n_s(ErrorToastContainer, \"14kQo81Om0hPmvxWFevYf2cbIYo=\", false, function () {\n  return [useRejectionHandler, useLogs];\n});\n_c = ErrorToastContainer;\nfunction ErrorToastStack({\n  logs\n}) {\n  _s2();\n  const onDismissWarns = useCallback(() => {\n    LogBoxData.clearWarnings();\n  }, []);\n  const onDismissErrors = useCallback(() => {\n    LogBoxData.clearErrors();\n  }, []);\n  const setSelectedLog = useCallback(index => {\n    LogBoxData.setSelectedLog(index);\n  }, []);\n  function openLog(log) {\n    let index = logs.length - 1;\n    while (index > 0 && logs[index] !== log) {\n      index -= 1;\n    }\n    setSelectedLog(index);\n  }\n  const warnings = useMemo(() => logs.filter(log => log.level === 'warn'), [logs]);\n  const errors = useMemo(() => logs.filter(log => log.level === 'error' || log.level === 'fatal'), [logs]);\n  return _jsxDEV(View, {\n    style: styles.list,\n    children: [warnings.length > 0 && _jsxDEV(ErrorToast, {\n      log: warnings[warnings.length - 1],\n      level: \"warn\",\n      totalLogCount: warnings.length,\n      onPressOpen: () => openLog(warnings[warnings.length - 1]),\n      onPressDismiss: onDismissWarns\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 9\n    }, this), errors.length > 0 && _jsxDEV(ErrorToast, {\n      log: errors[errors.length - 1],\n      level: \"error\",\n      totalLogCount: errors.length,\n      onPressOpen: () => openLog(errors[errors.length - 1]),\n      onPressDismiss: onDismissErrors\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 5\n  }, this);\n}\n_s2(ErrorToastStack, \"AXBQrCpCvxxgX20QiFBBgOphP40=\");\n_c2 = ErrorToastStack;\nconst styles = StyleSheet.create({\n  list: {\n    bottom: 6,\n    left: 10,\n    right: 10,\n    maxWidth: 320,\n    position: 'fixed'\n  }\n});\nexport default _c3 = LogBoxData.withSubscription(ErrorToastContainer);\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"ErrorToastContainer\");\n$RefreshReg$(_c2, \"ErrorToastStack\");\n$RefreshReg$(_c3, \"%default%\");","map":{"version":3,"names":["React","useCallback","useMemo","StyleSheet","View","ErrorToast","LogBoxData","useLogs","useRejectionHandler","jsxDEV","_jsxDEV","ErrorToastContainer","_s","logs","isDisabled","length","ErrorToastStack","fileName","_jsxFileName","lineNumber","columnNumber","_c","_s2","onDismissWarns","clearWarnings","onDismissErrors","clearErrors","setSelectedLog","index","openLog","log","warnings","filter","level","errors","style","styles","list","children","totalLogCount","onPressOpen","onPressDismiss","_c2","create","bottom","left","right","maxWidth","position","_c3","withSubscription","$RefreshReg$"],"sources":["/Users/edward/Documents/TeleMed/TeleMed/node_modules/@expo/metro-runtime/src/error-overlay/toast/ErrorToastContainer.web.tsx"],"sourcesContent":["/**\n * Copyright (c) 650 Industries.\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React, { useCallback, useMemo } from 'react';\nimport { StyleSheet, View } from 'react-native';\n\nimport { ErrorToast } from './ErrorToast';\nimport * as LogBoxData from '../Data/LogBoxData';\nimport { LogBoxLog } from '../Data/LogBoxLog';\nimport { useLogs } from '../Data/LogContext';\nimport { useRejectionHandler } from '../useRejectionHandler';\n\nexport function ErrorToastContainer() {\n  useRejectionHandler();\n  const { logs, isDisabled } = useLogs();\n  if (!logs.length || isDisabled) {\n    return null;\n  }\n  return <ErrorToastStack logs={logs} />;\n}\n\nfunction ErrorToastStack({ logs }: { logs: LogBoxLog[] }) {\n  const onDismissWarns = useCallback(() => {\n    LogBoxData.clearWarnings();\n  }, []);\n\n  const onDismissErrors = useCallback(() => {\n    LogBoxData.clearErrors();\n  }, []);\n\n  const setSelectedLog = useCallback((index: number): void => {\n    LogBoxData.setSelectedLog(index);\n  }, []);\n\n  function openLog(log: LogBoxLog) {\n    let index = logs.length - 1;\n\n    // Stop at zero because if we don't find any log, we'll open the first log.\n    while (index > 0 && logs[index] !== log) {\n      index -= 1;\n    }\n    setSelectedLog(index);\n  }\n\n  const warnings = useMemo(() => logs.filter((log) => log.level === 'warn'), [logs]);\n\n  const errors = useMemo(\n    () => logs.filter((log) => log.level === 'error' || log.level === 'fatal'),\n    [logs]\n  );\n\n  return (\n    <View style={styles.list}>\n      {warnings.length > 0 && (\n        <ErrorToast\n          log={warnings[warnings.length - 1]}\n          level=\"warn\"\n          totalLogCount={warnings.length}\n          onPressOpen={() => openLog(warnings[warnings.length - 1])}\n          onPressDismiss={onDismissWarns}\n        />\n      )}\n\n      {errors.length > 0 && (\n        <ErrorToast\n          log={errors[errors.length - 1]}\n          level=\"error\"\n          totalLogCount={errors.length}\n          onPressOpen={() => openLog(errors[errors.length - 1])}\n          onPressDismiss={onDismissErrors}\n        />\n      )}\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  list: {\n    bottom: 6,\n    left: 10,\n    right: 10,\n    maxWidth: 320,\n    // @ts-expect-error\n    position: 'fixed',\n  },\n});\n\nexport default LogBoxData.withSubscription(ErrorToastContainer);\n"],"mappings":";;;AAOA,OAAOA,KAAK,IAAIC,WAAW,EAAEC,OAAO,QAAQ,OAAO;AAAC,OAAAC,UAAA;AAAA,OAAAC,IAAA;AAGpD,SAASC,UAAU,QAAQ,cAAc;AACzC,OAAO,KAAKC,UAAU,MAAM,oBAAoB;AAEhD,SAASC,OAAO,QAAQ,oBAAoB;AAC5C,SAASC,mBAAmB,QAAQ,wBAAwB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE7D,OAAO,SAASC,mBAAmBA,CAAA,EAAG;EAAAC,EAAA;EACpCJ,mBAAmB,CAAC,CAAC;EACrB,MAAM;IAAEK,IAAI;IAAEC;EAAW,CAAC,GAAGP,OAAO,CAAC,CAAC;EACtC,IAAI,CAACM,IAAI,CAACE,MAAM,IAAID,UAAU,EAAE;IAC9B,OAAO,IAAI;EACb;EACA,OAAOJ,OAAA,CAACM,eAAe;IAACH,IAAI,EAAEA;EAAK;IAAAI,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;AACxC;AAACR,EAAA,CAPeD,mBAAmB;EAAA,QACjCH,mBAAmB,EACUD,OAAO;AAAA;AAAAc,EAAA,GAFtBV,mBAAmB;AASnC,SAASK,eAAeA,CAAC;EAAEH;AAA4B,CAAC,EAAE;EAAAS,GAAA;EACxD,MAAMC,cAAc,GAAGtB,WAAW,CAAC,MAAM;IACvCK,UAAU,CAACkB,aAAa,CAAC,CAAC;EAC5B,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMC,eAAe,GAAGxB,WAAW,CAAC,MAAM;IACxCK,UAAU,CAACoB,WAAW,CAAC,CAAC;EAC1B,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMC,cAAc,GAAG1B,WAAW,CAAE2B,KAAa,IAAW;IAC1DtB,UAAU,CAACqB,cAAc,CAACC,KAAK,CAAC;EAClC,CAAC,EAAE,EAAE,CAAC;EAEN,SAASC,OAAOA,CAACC,GAAc,EAAE;IAC/B,IAAIF,KAAK,GAAGf,IAAI,CAACE,MAAM,GAAG,CAAC;IAG3B,OAAOa,KAAK,GAAG,CAAC,IAAIf,IAAI,CAACe,KAAK,CAAC,KAAKE,GAAG,EAAE;MACvCF,KAAK,IAAI,CAAC;IACZ;IACAD,cAAc,CAACC,KAAK,CAAC;EACvB;EAEA,MAAMG,QAAQ,GAAG7B,OAAO,CAAC,MAAMW,IAAI,CAACmB,MAAM,CAAEF,GAAG,IAAKA,GAAG,CAACG,KAAK,KAAK,MAAM,CAAC,EAAE,CAACpB,IAAI,CAAC,CAAC;EAElF,MAAMqB,MAAM,GAAGhC,OAAO,CACpB,MAAMW,IAAI,CAACmB,MAAM,CAAEF,GAAG,IAAKA,GAAG,CAACG,KAAK,KAAK,OAAO,IAAIH,GAAG,CAACG,KAAK,KAAK,OAAO,CAAC,EAC1E,CAACpB,IAAI,CACP,CAAC;EAED,OACEH,OAAA,CAACN,IAAI;IAAC+B,KAAK,EAAEC,MAAM,CAACC,IAAK;IAAAC,QAAA,GACtBP,QAAQ,CAAChB,MAAM,GAAG,CAAC,IAClBL,OAAA,CAACL,UAAU;MACTyB,GAAG,EAAEC,QAAQ,CAACA,QAAQ,CAAChB,MAAM,GAAG,CAAC,CAAE;MACnCkB,KAAK,EAAC,MAAM;MACZM,aAAa,EAAER,QAAQ,CAAChB,MAAO;MAC/ByB,WAAW,EAAEA,CAAA,KAAMX,OAAO,CAACE,QAAQ,CAACA,QAAQ,CAAChB,MAAM,GAAG,CAAC,CAAC,CAAE;MAC1D0B,cAAc,EAAElB;IAAe;MAAAN,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAChC,CACF,EAEAc,MAAM,CAACnB,MAAM,GAAG,CAAC,IAChBL,OAAA,CAACL,UAAU;MACTyB,GAAG,EAAEI,MAAM,CAACA,MAAM,CAACnB,MAAM,GAAG,CAAC,CAAE;MAC/BkB,KAAK,EAAC,OAAO;MACbM,aAAa,EAAEL,MAAM,CAACnB,MAAO;MAC7ByB,WAAW,EAAEA,CAAA,KAAMX,OAAO,CAACK,MAAM,CAACA,MAAM,CAACnB,MAAM,GAAG,CAAC,CAAC,CAAE;MACtD0B,cAAc,EAAEhB;IAAgB;MAAAR,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACjC,CACF;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACG,CAAC;AAEX;AAACE,GAAA,CArDQN,eAAe;AAAA0B,GAAA,GAAf1B,eAAe;AAuDxB,MAAMoB,MAAM,GAAGjC,UAAU,CAACwC,MAAM,CAAC;EAC/BN,IAAI,EAAE;IACJO,MAAM,EAAE,CAAC;IACTC,IAAI,EAAE,EAAE;IACRC,KAAK,EAAE,EAAE;IACTC,QAAQ,EAAE,GAAG;IAEbC,QAAQ,EAAE;EACZ;AACF,CAAC,CAAC;AAEF,eAAAC,GAAA,GAAe3C,UAAU,CAAC4C,gBAAgB,CAACvC,mBAAmB,CAAC;AAAC,IAAAU,EAAA,EAAAqB,GAAA,EAAAO,GAAA;AAAAE,YAAA,CAAA9B,EAAA;AAAA8B,YAAA,CAAAT,GAAA;AAAAS,YAAA,CAAAF,GAAA","ignoreList":[]},"metadata":{"hasCjsExports":false},"sourceType":"module","externalDependencies":[]}