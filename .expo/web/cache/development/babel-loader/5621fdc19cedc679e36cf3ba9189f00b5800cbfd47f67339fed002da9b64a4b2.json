{"ast":null,"code":"\"use strict\";\n'use client';\n\nvar _s = $RefreshSig$();\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.PreviewRouteContext = void 0;\nexports.usePreviewInfo = usePreviewInfo;\nexports.useIsPreview = useIsPreview;\nconst react_1 = require(\"react\");\nexports.PreviewRouteContext = (0, react_1.createContext)(undefined);\nfunction usePreviewInfo() {\n  const paramsContext = (0, react_1.use)(exports.PreviewRouteContext);\n  return Object.assign({\n    isPreview: !!paramsContext\n  }, paramsContext);\n}\nfunction useIsPreview() {\n  _s();\n  const {\n    isPreview\n  } = usePreviewInfo();\n  return isPreview;\n}\n_s(useIsPreview, \"z5Oa8b8ZbwqYU9bn+7J9ad/byig=\", false, function () {\n  return [usePreviewInfo];\n});","map":{"version":3,"names":["_s","$RefreshSig$","exports","usePreviewInfo","useIsPreview","react_1","require","PreviewRouteContext","createContext","undefined","paramsContext","use","Object","assign","isPreview"],"sources":["/Users/edward/Documents/TeleMed/TeleMed/node_modules/expo-router/src/link/preview/PreviewRouteContext.ts"],"sourcesContent":["'use client';\n\nimport { createContext, use } from 'react';\n\nimport type { UnknownOutputParams } from '../../types';\n\nexport interface PreviewRouteContextType {\n  params: UnknownOutputParams;\n  pathname: string;\n  segments: string[];\n}\n\nexport const PreviewRouteContext = createContext<PreviewRouteContextType | undefined>(undefined);\n\ntype UsePreviewInfo = { isPreview: boolean } & Partial<PreviewRouteContextType>;\n\n/**\n * Returns information about the current route if it is displayed in preview mode.\n */\nexport function usePreviewInfo(): UsePreviewInfo {\n  const paramsContext = use(PreviewRouteContext);\n  return {\n    isPreview: !!paramsContext,\n    ...paramsContext,\n  };\n}\n\n/**\n * Hook to determine if the current route is rendered inside a preview.\n *\n *  @returns {boolean} - True if the current route is rendered inside a preview, false otherwise.\n */\nexport function useIsPreview(): boolean {\n  const { isPreview } = usePreviewInfo();\n  return isPreview;\n}\n"],"mappings":";AAAA,YAAY;;AAAC,IAAAA,EAAA,GAAAC,YAAA;;;;;AAmBbC,OAAA,CAAAC,cAAA,GAAAA,cAAA;AAaAD,OAAA,CAAAE,YAAA,GAAAA,YAAA;AA9BA,MAAAC,OAAA,GAAAC,OAAA;AAUaJ,OAAA,CAAAK,mBAAmB,GAAG,IAAAF,OAAA,CAAAG,aAAa,EAAsCC,SAAS,CAAC;AAOhG,SAAgBN,cAAcA,CAAA;EAC5B,MAAMO,aAAa,GAAG,IAAAL,OAAA,CAAAM,GAAG,EAACT,OAAA,CAAAK,mBAAmB,CAAC;EAC9C,OAAAK,MAAA,CAAAC,MAAA;IACEC,SAAS,EAAE,CAAC,CAACJ;EAAa,GACvBA,aAAa;AAEpB;AAOA,SAAgBN,YAAYA,CAAA;EAAAJ,EAAA;EAC1B,MAAM;IAAEc;EAAS,CAAE,GAAGX,cAAc,EAAE;EACtC,OAAOW,SAAS;AAClB;AAACd,EAAA,CAHeI,YAAY;EAAA,QACJD,cAAc;AAAA","ignoreList":[]},"metadata":{"hasCjsExports":true},"sourceType":"script","externalDependencies":[]}