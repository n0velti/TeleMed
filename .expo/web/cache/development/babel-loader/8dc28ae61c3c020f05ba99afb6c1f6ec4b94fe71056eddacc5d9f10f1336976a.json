{"ast":null,"code":"var _jsxFileName = \"/Users/edward/Documents/TeleMed/TeleMed/node_modules/@expo/metro-runtime/src/error-overlay/toast/ErrorToastMessage.tsx\";\nimport React from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport { LogBoxMessage } from '../UI/LogBoxMessage';\nimport * as LogBoxStyle from '../UI/LogBoxStyle';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function ErrorToastMessage({\n  message\n}) {\n  return _jsxDEV(Text, {\n    numberOfLines: 1,\n    style: styles.text,\n    children: message && _jsxDEV(LogBoxMessage, {\n      plaintext: true,\n      message: message,\n      style: styles.substitutionText\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 19\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 5\n  }, this);\n}\n_c = ErrorToastMessage;\nconst styles = StyleSheet.create({\n  text: {\n    userSelect: 'none',\n    paddingLeft: 8,\n    color: LogBoxStyle.getTextColor(1),\n    flex: 1,\n    fontSize: 14,\n    lineHeight: 22\n  },\n  substitutionText: {\n    color: LogBoxStyle.getTextColor(0.6)\n  }\n});\nvar _c;\n$RefreshReg$(_c, \"ErrorToastMessage\");","map":{"version":3,"names":["React","StyleSheet","Text","LogBoxMessage","LogBoxStyle","jsxDEV","_jsxDEV","ErrorToastMessage","message","numberOfLines","style","styles","text","children","plaintext","substitutionText","fileName","_jsxFileName","lineNumber","columnNumber","_c","create","userSelect","paddingLeft","color","getTextColor","flex","fontSize","lineHeight","$RefreshReg$"],"sources":["/Users/edward/Documents/TeleMed/TeleMed/node_modules/@expo/metro-runtime/src/error-overlay/toast/ErrorToastMessage.tsx"],"sourcesContent":["import React from 'react';\nimport { StyleSheet, Text } from 'react-native';\n\nimport type { Message as MessageType } from '../Data/parseLogBoxLog';\nimport { LogBoxMessage } from '../UI/LogBoxMessage';\nimport * as LogBoxStyle from '../UI/LogBoxStyle';\n\nexport function ErrorToastMessage({ message }: { message?: MessageType }) {\n  return (\n    <Text numberOfLines={1} style={styles.text}>\n      {message && <LogBoxMessage plaintext message={message} style={styles.substitutionText} />}\n    </Text>\n  );\n}\n\nconst styles = StyleSheet.create({\n  text: {\n    userSelect: 'none',\n    paddingLeft: 8,\n    color: LogBoxStyle.getTextColor(1),\n    flex: 1,\n    fontSize: 14,\n    lineHeight: 22,\n  },\n  substitutionText: {\n    color: LogBoxStyle.getTextColor(0.6),\n  },\n});\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AAAC,OAAAC,UAAA;AAAA,OAAAC,IAAA;AAI1B,SAASC,aAAa,QAAQ,qBAAqB;AACnD,OAAO,KAAKC,WAAW,MAAM,mBAAmB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEjD,OAAO,SAASC,iBAAiBA,CAAC;EAAEC;AAAmC,CAAC,EAAE;EACxE,OACEF,OAAA,CAACJ,IAAI;IAACO,aAAa,EAAE,CAAE;IAACC,KAAK,EAAEC,MAAM,CAACC,IAAK;IAAAC,QAAA,EACxCL,OAAO,IAAIF,OAAA,CAACH,aAAa;MAACW,SAAS;MAACN,OAAO,EAAEA,OAAQ;MAACE,KAAK,EAAEC,MAAM,CAACI;IAAiB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACrF,CAAC;AAEX;AAACC,EAAA,GANeb,iBAAiB;AAQjC,MAAMI,MAAM,GAAGV,UAAU,CAACoB,MAAM,CAAC;EAC/BT,IAAI,EAAE;IACJU,UAAU,EAAE,MAAM;IAClBC,WAAW,EAAE,CAAC;IACdC,KAAK,EAAEpB,WAAW,CAACqB,YAAY,CAAC,CAAC,CAAC;IAClCC,IAAI,EAAE,CAAC;IACPC,QAAQ,EAAE,EAAE;IACZC,UAAU,EAAE;EACd,CAAC;EACDb,gBAAgB,EAAE;IAChBS,KAAK,EAAEpB,WAAW,CAACqB,YAAY,CAAC,GAAG;EACrC;AACF,CAAC,CAAC;AAAC,IAAAL,EAAA;AAAAS,YAAA,CAAAT,EAAA","ignoreList":[]},"metadata":{"hasCjsExports":false},"sourceType":"module","externalDependencies":[]}