{"ast":null,"code":"\"use strict\";\n\nvar _s = $RefreshSig$();\nimport * as React from 'react';\nimport { isArrayEqual } from \"./isArrayEqual.js\";\nimport { NavigationBuilderContext } from \"./NavigationBuilderContext.js\";\nimport { NavigationRouteContext } from \"./NavigationRouteContext.js\";\nexport function useOnGetState({\n  getState,\n  getStateListeners\n}) {\n  _s();\n  const {\n    addKeyedListener\n  } = React.useContext(NavigationBuilderContext);\n  const route = React.useContext(NavigationRouteContext);\n  const key = route ? route.key : 'root';\n  const getRehydratedState = React.useCallback(() => {\n    const state = getState();\n    const routes = state.routes.map(route => {\n      const childState = getStateListeners[route.key]?.();\n      if (route.state === childState) {\n        return route;\n      }\n      return Object.assign({}, route, {\n        state: childState\n      });\n    });\n    if (isArrayEqual(state.routes, routes)) {\n      return state;\n    }\n    return Object.assign({}, state, {\n      routes\n    });\n  }, [getState, getStateListeners]);\n  React.useEffect(() => {\n    return addKeyedListener?.('getState', key, getRehydratedState);\n  }, [addKeyedListener, getRehydratedState, key]);\n}\n_s(useOnGetState, \"FIMBJwV7fkPCpAxOSA51EhLJSS8=\");","map":{"version":3,"names":["React","isArrayEqual","NavigationBuilderContext","NavigationRouteContext","useOnGetState","getState","getStateListeners","_s","addKeyedListener","useContext","route","key","getRehydratedState","useCallback","state","routes","map","childState","Object","assign","useEffect"],"sources":["/Users/edward/Documents/TeleMed/TeleMed/node_modules/@react-navigation/core/src/useOnGetState.tsx"],"sourcesContent":["import type { NavigationState } from '@react-navigation/routers';\nimport * as React from 'react';\n\nimport { isArrayEqual } from './isArrayEqual';\nimport {\n  type GetStateListener,\n  NavigationBuilderContext,\n} from './NavigationBuilderContext';\nimport { NavigationRouteContext } from './NavigationRouteContext';\n\ntype Options = {\n  getState: () => NavigationState;\n  getStateListeners: Record<string, GetStateListener | undefined>;\n};\n\nexport function useOnGetState({ getState, getStateListeners }: Options) {\n  const { addKeyedListener } = React.useContext(NavigationBuilderContext);\n  const route = React.useContext(NavigationRouteContext);\n  const key = route ? route.key : 'root';\n\n  const getRehydratedState = React.useCallback(() => {\n    const state = getState();\n\n    // Avoid returning new route objects if we don't need to\n    const routes = state.routes.map((route) => {\n      const childState = getStateListeners[route.key]?.();\n\n      if (route.state === childState) {\n        return route;\n      }\n\n      return { ...route, state: childState };\n    });\n\n    if (isArrayEqual(state.routes, routes)) {\n      return state;\n    }\n\n    return { ...state, routes };\n  }, [getState, getStateListeners]);\n\n  React.useEffect(() => {\n    return addKeyedListener?.('getState', key, getRehydratedState);\n  }, [addKeyedListener, getRehydratedState, key]);\n}\n"],"mappings":";;;AACA,OAAO,KAAKA,KAAK,MAAM,OAAO;AAE9B,SAASC,YAAY,QAAQ,mBAAgB;AAC7C,SAEEC,wBAAwB,QACnB,+BAA4B;AACnC,SAASC,sBAAsB,QAAQ,6BAA0B;AAOjE,OAAO,SAASC,aAAaA,CAAC;EAAEC,QAAQ;EAAEC;AAA2B,CAAC,EAAE;EAAAC,EAAA;EACtE,MAAM;IAAEC;EAAiB,CAAC,GAAGR,KAAK,CAACS,UAAU,CAACP,wBAAwB,CAAC;EACvE,MAAMQ,KAAK,GAAGV,KAAK,CAACS,UAAU,CAACN,sBAAsB,CAAC;EACtD,MAAMQ,GAAG,GAAGD,KAAK,GAAGA,KAAK,CAACC,GAAG,GAAG,MAAM;EAEtC,MAAMC,kBAAkB,GAAGZ,KAAK,CAACa,WAAW,CAAC,MAAM;IACjD,MAAMC,KAAK,GAAGT,QAAQ,CAAC,CAAC;IAGxB,MAAMU,MAAM,GAAGD,KAAK,CAACC,MAAM,CAACC,GAAG,CAAEN,KAAK,IAAK;MACzC,MAAMO,UAAU,GAAGX,iBAAiB,CAACI,KAAK,CAACC,GAAG,CAAC,GAAG,CAAC;MAEnD,IAAID,KAAK,CAACI,KAAK,KAAKG,UAAU,EAAE;QAC9B,OAAOP,KAAK;MACd;MAEA,OAAAQ,MAAA,CAAAC,MAAA,KAAYT,KAAK;QAAEI,KAAK,EAAEG;MAAA;IAC5B,CAAC,CAAC;IAEF,IAAIhB,YAAY,CAACa,KAAK,CAACC,MAAM,EAAEA,MAAM,CAAC,EAAE;MACtC,OAAOD,KAAK;IACd;IAEA,OAAAI,MAAA,CAAAC,MAAA,KAAYL,KAAK;MAAEC;IAAA;EACrB,CAAC,EAAE,CAACV,QAAQ,EAAEC,iBAAiB,CAAC,CAAC;EAEjCN,KAAK,CAACoB,SAAS,CAAC,MAAM;IACpB,OAAOZ,gBAAgB,GAAG,UAAU,EAAEG,GAAG,EAAEC,kBAAkB,CAAC;EAChE,CAAC,EAAE,CAACJ,gBAAgB,EAAEI,kBAAkB,EAAED,GAAG,CAAC,CAAC;AACjD;AAAAJ,EAAA,CA7BgBH,aAAa","ignoreList":[]},"metadata":{"hasCjsExports":false},"sourceType":"module","externalDependencies":[]}