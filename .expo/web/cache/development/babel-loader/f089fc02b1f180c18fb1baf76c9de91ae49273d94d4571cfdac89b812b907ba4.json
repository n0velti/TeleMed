{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.sortRoutes = sortRoutes;\nexports.sortRoutesWithInitial = sortRoutesWithInitial;\nconst matchers_1 = require(\"./matchers\");\nfunction sortDynamicConvention(a, b) {\n  if (a.deep && !b.deep) {\n    return 1;\n  }\n  if (!a.deep && b.deep) {\n    return -1;\n  }\n  return 0;\n}\nfunction sortRoutes(a, b) {\n  if (a.dynamic && !b.dynamic) {\n    return 1;\n  }\n  if (!a.dynamic && b.dynamic) {\n    return -1;\n  }\n  if (a.dynamic && b.dynamic) {\n    if (a.dynamic.length !== b.dynamic.length) {\n      return b.dynamic.length - a.dynamic.length;\n    }\n    for (let i = 0; i < a.dynamic.length; i++) {\n      const aDynamic = a.dynamic[i];\n      const bDynamic = b.dynamic[i];\n      if (aDynamic.notFound && bDynamic.notFound) {\n        const s = sortDynamicConvention(aDynamic, bDynamic);\n        if (s) {\n          return s;\n        }\n      }\n      if (aDynamic.notFound && !bDynamic.notFound) {\n        return 1;\n      }\n      if (!aDynamic.notFound && bDynamic.notFound) {\n        return -1;\n      }\n      const s = sortDynamicConvention(aDynamic, bDynamic);\n      if (s) {\n        return s;\n      }\n    }\n    return 0;\n  }\n  const aIndex = a.route === 'index' || (0, matchers_1.matchGroupName)(a.route) != null;\n  const bIndex = b.route === 'index' || (0, matchers_1.matchGroupName)(b.route) != null;\n  if (aIndex && !bIndex) {\n    return -1;\n  }\n  if (!aIndex && bIndex) {\n    return 1;\n  }\n  return a.route.length - b.route.length;\n}\nfunction sortRoutesWithInitial(initialRouteName) {\n  return (a, b) => {\n    if (initialRouteName) {\n      if (a.route === initialRouteName) {\n        return -1;\n      }\n      if (b.route === initialRouteName) {\n        return 1;\n      }\n    }\n    return sortRoutes(a, b);\n  };\n}","map":{"version":3,"names":["exports","sortRoutes","sortRoutesWithInitial","matchers_1","require","sortDynamicConvention","a","b","deep","dynamic","length","i","aDynamic","bDynamic","notFound","s","aIndex","route","matchGroupName","bIndex","initialRouteName"],"sources":["/Users/edward/Documents/TeleMed/TeleMed/node_modules/expo-router/src/sortRoutes.ts"],"sourcesContent":["import { DynamicConvention, RouteNode } from './Route';\nimport { matchGroupName } from './matchers';\n\nfunction sortDynamicConvention(a: DynamicConvention, b: DynamicConvention) {\n  if (a.deep && !b.deep) {\n    return 1;\n  }\n  if (!a.deep && b.deep) {\n    return -1;\n  }\n  return 0;\n}\n\nexport function sortRoutes(a: RouteNode, b: RouteNode): number {\n  if (a.dynamic && !b.dynamic) {\n    return 1;\n  }\n  if (!a.dynamic && b.dynamic) {\n    return -1;\n  }\n  if (a.dynamic && b.dynamic) {\n    if (a.dynamic.length !== b.dynamic.length) {\n      return b.dynamic.length - a.dynamic.length;\n    }\n\n    for (let i = 0; i < a.dynamic.length; i++) {\n      const aDynamic = a.dynamic[i];\n      const bDynamic = b.dynamic[i];\n\n      if (aDynamic.notFound && bDynamic.notFound) {\n        const s = sortDynamicConvention(aDynamic, bDynamic);\n        if (s) {\n          return s;\n        }\n      }\n      if (aDynamic.notFound && !bDynamic.notFound) {\n        return 1;\n      }\n      if (!aDynamic.notFound && bDynamic.notFound) {\n        return -1;\n      }\n\n      const s = sortDynamicConvention(aDynamic, bDynamic);\n      if (s) {\n        return s;\n      }\n    }\n    return 0;\n  }\n\n  const aIndex = a.route === 'index' || matchGroupName(a.route) != null;\n  const bIndex = b.route === 'index' || matchGroupName(b.route) != null;\n\n  if (aIndex && !bIndex) {\n    return -1;\n  }\n  if (!aIndex && bIndex) {\n    return 1;\n  }\n\n  return a.route.length - b.route.length;\n}\n\nexport function sortRoutesWithInitial(initialRouteName?: string) {\n  return (a: RouteNode, b: RouteNode): number => {\n    if (initialRouteName) {\n      if (a.route === initialRouteName) {\n        return -1;\n      }\n      if (b.route === initialRouteName) {\n        return 1;\n      }\n    }\n    return sortRoutes(a, b);\n  };\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{"hasCjsExports":true},"sourceType":"script","externalDependencies":[]}