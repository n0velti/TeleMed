{"ast":null,"code":"\"use strict\";\n'use client';\n\nvar _react = require(\"react\");\nvar _reactJsxDevRuntime = require(\"react/jsx-dev-runtime\");\nvar _objectWithoutPropertiesLoose = require(\"@babel/runtime/helpers/objectWithoutPropertiesLoose\");\nconst _excluded = [\"ErrorBoundary\"],\n  _excluded2 = [\"route\", \"navigation\"],\n  _excluded3 = [\"options\", \"getId\"];\nvar _jsxFileName = \"/Users/edward/Documents/TeleMed/TeleMed/node_modules/expo-router/build/useScreens.js\",\n  _s = $RefreshSig$();\nvar __createBinding = this && this.__createBinding || (Object.create ? function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  var desc = Object.getOwnPropertyDescriptor(m, k);\n  if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n    desc = {\n      enumerable: true,\n      get: function () {\n        return m[k];\n      }\n    };\n  }\n  Object.defineProperty(o, k2, desc);\n} : function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  o[k2] = m[k];\n});\nvar __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function (o, v) {\n  Object.defineProperty(o, \"default\", {\n    enumerable: true,\n    value: v\n  });\n} : function (o, v) {\n  o[\"default\"] = v;\n});\nvar __importStar = this && this.__importStar || function () {\n  var ownKeys = function (o) {\n    ownKeys = Object.getOwnPropertyNames || function (o) {\n      var ar = [];\n      for (var k in o) if (Object.prototype.hasOwnProperty.call(o, k)) ar[ar.length] = k;\n      return ar;\n    };\n    return ownKeys(o);\n  };\n  return function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k = ownKeys(mod), i = 0; i < k.length; i++) if (k[i] !== \"default\") __createBinding(result, mod, k[i]);\n    __setModuleDefault(result, mod);\n    return result;\n  };\n}();\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.useSortedScreens = useSortedScreens;\nexports.getQualifiedRouteComponent = getQualifiedRouteComponent;\nexports.screenOptionsFactory = screenOptionsFactory;\nexports.routeToScreen = routeToScreen;\nexports.getSingularId = getSingularId;\nconst native_1 = require(\"@react-navigation/native\");\nconst react_1 = __importStar(require(\"react\"));\nconst Route_1 = require(\"./Route\");\nconst storeContext_1 = require(\"./global-state/storeContext\");\nconst import_mode_1 = __importDefault(require(\"./import-mode\"));\nconst primitives_1 = require(\"./primitives\");\nconst EmptyRoute_1 = require(\"./views/EmptyRoute\");\nconst SuspenseFallback_1 = require(\"./views/SuspenseFallback\");\nconst Try_1 = require(\"./views/Try\");\nfunction getSortedChildren(children, order = [], initialRouteName) {\n  if (!order?.length) {\n    return children.sort((0, Route_1.sortRoutesWithInitial)(initialRouteName)).map(route => ({\n      route,\n      props: {}\n    }));\n  }\n  const entries = [...children];\n  const ordered = order.map(({\n    name,\n    redirect,\n    initialParams,\n    listeners,\n    options,\n    getId,\n    dangerouslySingular: singular\n  }) => {\n    if (!entries.length) {\n      console.warn(`[Layout children]: Too many screens defined. Route \"${name}\" is extraneous.`);\n      return null;\n    }\n    const matchIndex = entries.findIndex(child => child.route === name);\n    if (matchIndex === -1) {\n      console.warn(`[Layout children]: No route named \"${name}\" exists in nested children:`, children.map(({\n        route\n      }) => route));\n      return null;\n    } else {\n      const match = entries[matchIndex];\n      entries.splice(matchIndex, 1);\n      if (redirect) {\n        if (typeof redirect === 'string') {\n          throw new Error(`Redirecting to a specific route is not supported yet.`);\n        }\n        return null;\n      }\n      if (getId) {\n        console.warn(`Deprecated: prop 'getId' on screen ${name} is deprecated. Please rename the prop to 'dangerouslySingular'`);\n        if (singular) {\n          console.warn(`Screen ${name} cannot use both getId and dangerouslySingular together.`);\n        }\n      } else if (singular) {\n        if (typeof singular === 'string') {\n          getId = () => singular;\n        } else if (typeof singular === 'function' && name) {\n          getId = options => singular(name, options.params || {});\n        } else if (singular === true && name) {\n          getId = options => getSingularId(name, options);\n        }\n      }\n      return {\n        route: match,\n        props: {\n          initialParams,\n          listeners,\n          options,\n          getId\n        }\n      };\n    }\n  }).filter(Boolean);\n  ordered.push(...entries.sort((0, Route_1.sortRoutesWithInitial)(initialRouteName)).map(route => ({\n    route,\n    props: {}\n  })));\n  return ordered;\n}\nfunction useSortedScreens(order, protectedScreens, useOnlyUserDefinedScreens = false) {\n  _s();\n  const node = (0, Route_1.useRouteNode)();\n  const nodeChildren = node?.children ?? [];\n  const children = useOnlyUserDefinedScreens ? nodeChildren.filter(child => order.some(userDefinedScreen => userDefinedScreen.name === child.route)) : nodeChildren;\n  const sorted = children.length ? getSortedChildren(children, order, node?.initialRouteName) : [];\n  return react_1.default.useMemo(() => sorted.filter(item => !protectedScreens.has(item.route.route)).map(value => {\n    return routeToScreen(value.route, value.props);\n  }), [sorted, protectedScreens]);\n}\n_s(useSortedScreens, \"nwk+m61qLgjDVUp4IGV/072DDN4=\");\nfunction fromImport(value, _ref) {\n  let {\n      ErrorBoundary\n    } = _ref,\n    component = _objectWithoutPropertiesLoose(_ref, _excluded);\n  if (component?.default && __DEV__) {\n    component.default.displayName ??= `${component.default.name ?? 'Route'}(${value.contextKey})`;\n  }\n  if (ErrorBoundary) {\n    const Wrapped = react_1.default.forwardRef((props, ref) => {\n      const children = react_1.default.createElement(component.default || EmptyRoute_1.EmptyRoute, Object.assign({}, props, {\n        ref\n      }));\n      return _reactJsxDevRuntime.jsxDEV(Try_1.Try, {\n        catch: ErrorBoundary,\n        children: children\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 20\n      }, this);\n    });\n    if (__DEV__) {\n      Wrapped.displayName = `ErrorBoundary(${value.contextKey})`;\n    }\n    return {\n      default: Wrapped\n    };\n  }\n  if (process.env.NODE_ENV !== 'production') {\n    if (typeof component.default === 'object' && component.default && Object.keys(component.default).length === 0) {\n      return {\n        default: EmptyRoute_1.EmptyRoute\n      };\n    }\n  }\n  return {\n    default: component.default\n  };\n}\nfunction fromLoadedRoute(value, res) {\n  if (!(res instanceof Promise)) {\n    return fromImport(value, res);\n  }\n  return res.then(fromImport.bind(null, value));\n}\nconst qualifiedStore = new WeakMap();\nfunction getQualifiedRouteComponent(value) {\n  if (qualifiedStore.has(value)) {\n    return qualifiedStore.get(value);\n  }\n  let ScreenComponent;\n  if (import_mode_1.default === 'lazy') {\n    ScreenComponent = react_1.default.lazy(async () => {\n      const res = value.loadRoute();\n      return fromLoadedRoute(value, res);\n    });\n    if (__DEV__) {\n      ScreenComponent.displayName = `AsyncRoute(${value.route})`;\n    }\n  } else {\n    const res = value.loadRoute();\n    ScreenComponent = fromImport(value, res).default;\n  }\n  function BaseRoute(_ref2) {\n    let {\n        route,\n        navigation\n      } = _ref2,\n      props = _objectWithoutPropertiesLoose(_ref2, _excluded2);\n    const stateForPath = (0, native_1.useStateForPath)();\n    const isFocused = navigation.isFocused();\n    const store = (0, storeContext_1.useExpoRouterStore)();\n    if (isFocused) {\n      const state = navigation.getState();\n      const isLeaf = !('state' in state.routes[state.index]);\n      if (isLeaf && stateForPath) store.setFocusedState(stateForPath);\n    }\n    (0, react_1.useEffect)(() => navigation.addListener('focus', () => {\n      const state = navigation.getState();\n      const isLeaf = !('state' in state.routes[state.index]);\n      if (isLeaf && stateForPath) store.setFocusedState(stateForPath);\n    }), [navigation]);\n    return _reactJsxDevRuntime.jsxDEV(Route_1.Route, {\n      node: value,\n      route: route,\n      children: _reactJsxDevRuntime.jsxDEV(react_1.default.Suspense, {\n        fallback: _reactJsxDevRuntime.jsxDEV(SuspenseFallback_1.SuspenseFallback, {\n          route: value\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 212,\n          columnNumber: 45\n        }, this),\n        children: _reactJsxDevRuntime.jsxDEV(ScreenComponent, Object.assign({}, props, {\n          segment: value.route\n        }), void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 213,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 212,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 211,\n      columnNumber: 17\n    }, this);\n  }\n  if (__DEV__) {\n    BaseRoute.displayName = `Route(${value.route})`;\n  }\n  qualifiedStore.set(value, BaseRoute);\n  return BaseRoute;\n}\nfunction screenOptionsFactory(route, options) {\n  return args => {\n    const staticOptions = route.generated ? route.loadRoute()?.getNavOptions : null;\n    const staticResult = typeof staticOptions === 'function' ? staticOptions(args) : staticOptions;\n    const dynamicResult = typeof options === 'function' ? options?.(args) : options;\n    const output = Object.assign({}, staticResult, dynamicResult);\n    if (route.internal) {\n      output.tabBarItemStyle = {\n        display: 'none'\n      };\n      output.tabBarButton = () => null;\n      output.drawerItemStyle = {\n        height: 0,\n        display: 'none'\n      };\n    }\n    return output;\n  };\n}\nfunction routeToScreen(route, _ref3 = {}) {\n  let {\n      options,\n      getId\n    } = _ref3,\n    props = _objectWithoutPropertiesLoose(_ref3, _excluded3);\n  return _react.createElement(primitives_1.Screen, Object.assign({}, props, {\n    name: route.route,\n    key: route.route,\n    getId: getId,\n    options: screenOptionsFactory(route, options),\n    getComponent: () => getQualifiedRouteComponent(route),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 247,\n      columnNumber: 13\n    }\n  }));\n}\nfunction getSingularId(name, options = {}) {\n  return name.split('/').map(segment => {\n    if (segment.startsWith('[...')) {\n      return options.params?.[segment.slice(4, -1)]?.join('/') || segment;\n    } else if (segment.startsWith('[') && segment.endsWith(']')) {\n      return options.params?.[segment.slice(1, -1)] || segment;\n    } else {\n      return segment;\n    }\n  }).join('/');\n}","map":{"version":3,"names":["_react","require","_reactJsxDevRuntime","_objectWithoutPropertiesLoose","_excluded","_excluded2","_excluded3","_jsxFileName","_s","$RefreshSig$","exports","useSortedScreens","getQualifiedRouteComponent","screenOptionsFactory","routeToScreen","getSingularId","native_1","react_1","__importStar","Route_1","storeContext_1","import_mode_1","__importDefault","primitives_1","EmptyRoute_1","SuspenseFallback_1","Try_1","getSortedChildren","children","order","initialRouteName","length","sort","sortRoutesWithInitial","map","route","props","entries","ordered","name","redirect","initialParams","listeners","options","getId","dangerouslySingular","singular","console","warn","matchIndex","findIndex","child","match","splice","Error","params","filter","Boolean","push","protectedScreens","useOnlyUserDefinedScreens","node","useRouteNode","nodeChildren","some","userDefinedScreen","sorted","default","useMemo","item","has","value","fromImport","_ref","ErrorBoundary","component","__DEV__","displayName","contextKey","Wrapped","forwardRef","ref","createElement","EmptyRoute","Object","assign","jsxDEV","Try","catch","fileName","lineNumber","columnNumber","process","env","NODE_ENV","keys","fromLoadedRoute","res","Promise","then","bind","qualifiedStore","WeakMap","get","ScreenComponent","lazy","loadRoute","BaseRoute","_ref2","navigation","stateForPath","useStateForPath","isFocused","store","useExpoRouterStore","state","getState","isLeaf","routes","index","setFocusedState","useEffect","addListener","Route","Suspense","fallback","SuspenseFallback","segment","set","args","staticOptions","generated","getNavOptions","staticResult","dynamicResult","output","internal","tabBarItemStyle","display","tabBarButton","drawerItemStyle","height","_ref3","Screen","key","getComponent","__self","__source","split","startsWith","slice","join","endsWith"],"sources":["/Users/edward/Documents/TeleMed/TeleMed/node_modules/expo-router/src/useScreens.tsx"],"sourcesContent":["'use client';\n\nimport {\n  useStateForPath,\n  type EventMapBase,\n  type NavigationState,\n  type ParamListBase,\n  type RouteProp,\n  type ScreenListeners,\n} from '@react-navigation/native';\nimport React, { useEffect } from 'react';\n\nimport { LoadedRoute, Route, RouteNode, sortRoutesWithInitial, useRouteNode } from './Route';\nimport { useExpoRouterStore } from './global-state/storeContext';\nimport EXPO_ROUTER_IMPORT_MODE from './import-mode';\nimport { Screen } from './primitives';\nimport { UnknownOutputParams } from './types';\nimport { EmptyRoute } from './views/EmptyRoute';\nimport { SuspenseFallback } from './views/SuspenseFallback';\nimport { Try } from './views/Try';\n\nexport type ScreenProps<\n  TOptions extends Record<string, any> = Record<string, any>,\n  TState extends NavigationState = NavigationState,\n  TEventMap extends EventMapBase = EventMapBase,\n> = {\n  /** Name is required when used inside a Layout component. */\n  name?: string;\n  /**\n   * Redirect to the nearest sibling route.\n   * If all children are `redirect={true}`, the layout will render `null` as there are no children to render.\n   */\n  redirect?: boolean;\n  initialParams?: Record<string, any>;\n  options?:\n    | TOptions\n    | ((prop: { route: RouteProp<ParamListBase, string>; navigation: any }) => TOptions);\n\n  listeners?:\n    | ScreenListeners<TState, TEventMap>\n    | ((prop: {\n        route: RouteProp<ParamListBase, string>;\n        navigation: any;\n      }) => ScreenListeners<TState, TEventMap>);\n\n  getId?: ({ params }: { params?: Record<string, any> }) => string | undefined;\n\n  dangerouslySingular?: SingularOptions;\n};\n\nexport type SingularOptions =\n  | boolean\n  | ((name: string, params: UnknownOutputParams) => string | undefined);\n\nfunction getSortedChildren(\n  children: RouteNode[],\n  order: ScreenProps[] = [],\n  initialRouteName?: string\n): { route: RouteNode; props: Partial<ScreenProps> }[] {\n  if (!order?.length) {\n    return children\n      .sort(sortRoutesWithInitial(initialRouteName))\n      .map((route) => ({ route, props: {} }));\n  }\n  const entries = [...children];\n\n  const ordered = order\n    .map(\n      ({\n        name,\n        redirect,\n        initialParams,\n        listeners,\n        options,\n        getId,\n        dangerouslySingular: singular,\n      }) => {\n        if (!entries.length) {\n          console.warn(\n            `[Layout children]: Too many screens defined. Route \"${name}\" is extraneous.`\n          );\n          return null;\n        }\n        const matchIndex = entries.findIndex((child) => child.route === name);\n        if (matchIndex === -1) {\n          console.warn(\n            `[Layout children]: No route named \"${name}\" exists in nested children:`,\n            children.map(({ route }) => route)\n          );\n          return null;\n        } else {\n          // Get match and remove from entries\n          const match = entries[matchIndex];\n          entries.splice(matchIndex, 1);\n\n          // Ensure to return null after removing from entries.\n          if (redirect) {\n            if (typeof redirect === 'string') {\n              throw new Error(`Redirecting to a specific route is not supported yet.`);\n            }\n            return null;\n          }\n\n          if (getId) {\n            console.warn(\n              `Deprecated: prop 'getId' on screen ${name} is deprecated. Please rename the prop to 'dangerouslySingular'`\n            );\n            if (singular) {\n              console.warn(\n                `Screen ${name} cannot use both getId and dangerouslySingular together.`\n              );\n            }\n          } else if (singular) {\n            // If singular is set, use it as the getId function.\n            if (typeof singular === 'string') {\n              getId = () => singular;\n            } else if (typeof singular === 'function' && name) {\n              getId = (options) => singular(name, options.params || {});\n            } else if (singular === true && name) {\n              getId = (options) => getSingularId(name, options);\n            }\n          }\n\n          return {\n            route: match,\n            props: { initialParams, listeners, options, getId },\n          };\n        }\n      }\n    )\n    .filter(Boolean) as {\n    route: RouteNode;\n    props: Partial<ScreenProps>;\n  }[];\n\n  // Add any remaining children\n  ordered.push(\n    ...entries.sort(sortRoutesWithInitial(initialRouteName)).map((route) => ({ route, props: {} }))\n  );\n\n  return ordered;\n}\n\n/**\n * @returns React Navigation screens sorted by the `route` property.\n */\nexport function useSortedScreens(\n  order: ScreenProps[],\n  protectedScreens: Set<string>,\n  useOnlyUserDefinedScreens: boolean = false\n): React.ReactNode[] {\n  const node = useRouteNode();\n\n  const nodeChildren = node?.children ?? [];\n  const children = useOnlyUserDefinedScreens\n    ? nodeChildren.filter((child) =>\n        order.some((userDefinedScreen) => userDefinedScreen.name === child.route)\n      )\n    : nodeChildren;\n\n  const sorted = children.length ? getSortedChildren(children, order, node?.initialRouteName) : [];\n  return React.useMemo(\n    () =>\n      sorted\n        .filter((item) => !protectedScreens.has(item.route.route))\n        .map((value) => {\n          return routeToScreen(value.route, value.props);\n        }),\n    [sorted, protectedScreens]\n  );\n}\n\nfunction fromImport(value: RouteNode, { ErrorBoundary, ...component }: LoadedRoute) {\n  // If possible, add a more helpful display name for the component stack to improve debugging of React errors such as `Text strings must be rendered within a <Text> component.`.\n  if (component?.default && __DEV__) {\n    component.default.displayName ??= `${component.default.name ?? 'Route'}(${value.contextKey})`;\n  }\n\n  if (ErrorBoundary) {\n    const Wrapped = React.forwardRef((props: any, ref: any) => {\n      const children = React.createElement(component.default || EmptyRoute, {\n        ...props,\n        ref,\n      });\n      return <Try catch={ErrorBoundary}>{children}</Try>;\n    });\n\n    if (__DEV__) {\n      Wrapped.displayName = `ErrorBoundary(${value.contextKey})`;\n    }\n\n    return {\n      default: Wrapped,\n    };\n  }\n  if (process.env.NODE_ENV !== 'production') {\n    if (\n      typeof component.default === 'object' &&\n      component.default &&\n      Object.keys(component.default).length === 0\n    ) {\n      return { default: EmptyRoute };\n    }\n  }\n\n  return { default: component.default };\n}\n\nfunction fromLoadedRoute(value: RouteNode, res: LoadedRoute) {\n  if (!(res instanceof Promise)) {\n    return fromImport(value, res);\n  }\n\n  return res.then(fromImport.bind(null, value));\n}\n\n// TODO: Maybe there's a more React-y way to do this?\n// Without this store, the process enters a recursive loop.\nconst qualifiedStore = new WeakMap<RouteNode, React.ComponentType<any>>();\n\n/** Wrap the component with various enhancements and add access to child routes. */\nexport function getQualifiedRouteComponent(value: RouteNode) {\n  if (qualifiedStore.has(value)) {\n    return qualifiedStore.get(value)!;\n  }\n\n  let ScreenComponent:\n    | React.ForwardRefExoticComponent<React.RefAttributes<unknown>>\n    | React.ComponentType<any>;\n\n  // TODO: This ensures sync doesn't use React.lazy, but it's not ideal.\n  if (EXPO_ROUTER_IMPORT_MODE === 'lazy') {\n    ScreenComponent = React.lazy(async () => {\n      const res = value.loadRoute();\n      return fromLoadedRoute(value, res) as Promise<{\n        default: React.ComponentType<any>;\n      }>;\n    });\n\n    if (__DEV__) {\n      ScreenComponent.displayName = `AsyncRoute(${value.route})`;\n    }\n  } else {\n    const res = value.loadRoute();\n    ScreenComponent = fromImport(value, res).default!;\n  }\n  function BaseRoute({\n    // Remove these React Navigation props to\n    // enforce usage of expo-router hooks (where the query params are correct).\n    route,\n    navigation,\n\n    // Pass all other props to the component\n    ...props\n  }: any) {\n    const stateForPath = useStateForPath();\n    const isFocused = navigation.isFocused();\n    const store = useExpoRouterStore();\n\n    if (isFocused) {\n      const state = navigation.getState();\n      const isLeaf = !('state' in state.routes[state.index]);\n      if (isLeaf && stateForPath) store.setFocusedState(stateForPath);\n    }\n\n    useEffect(\n      () =>\n        navigation.addListener('focus', () => {\n          const state = navigation.getState();\n          const isLeaf = !('state' in state.routes[state.index]);\n          // Because setFocusedState caches the route info, this call will only trigger rerenders\n          // if the component itself didn’t rerender and the route info changed.\n          // Otherwise, the update from the `if` above will handle it,\n          // and this won’t cause a redundant second update.\n          if (isLeaf && stateForPath) store.setFocusedState(stateForPath);\n        }),\n      [navigation]\n    );\n\n    return (\n      <Route node={value} route={route}>\n        <React.Suspense fallback={<SuspenseFallback route={value} />}>\n          <ScreenComponent\n            {...props}\n            // Expose the template segment path, e.g. `(home)`, `[foo]`, `index`\n            // the intention is to make it possible to deduce shared routes.\n            segment={value.route}\n          />\n        </React.Suspense>\n      </Route>\n    );\n  }\n\n  if (__DEV__) {\n    BaseRoute.displayName = `Route(${value.route})`;\n  }\n\n  qualifiedStore.set(value, BaseRoute);\n  return BaseRoute;\n}\n\nexport function screenOptionsFactory(\n  route: RouteNode,\n  options?: ScreenProps['options']\n): ScreenProps['options'] {\n  return (args) => {\n    // Only eager load generated components\n    const staticOptions = route.generated ? route.loadRoute()?.getNavOptions : null;\n    const staticResult = typeof staticOptions === 'function' ? staticOptions(args) : staticOptions;\n    const dynamicResult = typeof options === 'function' ? options?.(args) : options;\n    const output = {\n      ...staticResult,\n      ...dynamicResult,\n    };\n\n    // Prevent generated screens from showing up in the tab bar.\n    if (route.internal) {\n      output.tabBarItemStyle = { display: 'none' };\n      output.tabBarButton = () => null;\n      // TODO: React Navigation doesn't provide a way to prevent rendering the drawer item.\n      output.drawerItemStyle = { height: 0, display: 'none' };\n    }\n\n    return output;\n  };\n}\n\nexport function routeToScreen(\n  route: RouteNode,\n  { options, getId, ...props }: Partial<ScreenProps> = {}\n) {\n  return (\n    <Screen\n      {...props}\n      name={route.route}\n      key={route.route}\n      getId={getId}\n      options={screenOptionsFactory(route, options)}\n      getComponent={() => getQualifiedRouteComponent(route)}\n    />\n  );\n}\n\nexport function getSingularId(name: string, options: Record<string, any> = {}) {\n  return name\n    .split('/')\n    .map((segment) => {\n      if (segment.startsWith('[...')) {\n        return options.params?.[segment.slice(4, -1)]?.join('/') || segment;\n      } else if (segment.startsWith('[') && segment.endsWith(']')) {\n        return options.params?.[segment.slice(1, -1)] || segment;\n      } else {\n        return segment;\n      }\n    })\n    .join('/');\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{"hasCjsExports":true},"sourceType":"script","externalDependencies":[]}