{"ast":null,"code":"\"use strict\";\n\nvar _s = $RefreshSig$();\nimport * as React from 'react';\nimport { NavigationRouteContext } from \"./NavigationRouteContext.js\";\nexport function useRoute() {\n  _s();\n  const route = React.useContext(NavigationRouteContext);\n  if (route === undefined) {\n    throw new Error(\"Couldn't find a route object. Is your component inside a screen in a navigator?\");\n  }\n  return route;\n}\n_s(useRoute, \"+p67gHdeicVxIDd5SykDKMiYfaw=\");","map":{"version":3,"names":["React","NavigationRouteContext","useRoute","_s","route","useContext","undefined","Error"],"sources":["/Users/edward/Documents/TeleMed/TeleMed/node_modules/@react-navigation/core/src/useRoute.tsx"],"sourcesContent":["import type { ParamListBase } from '@react-navigation/routers';\nimport * as React from 'react';\n\nimport { NavigationRouteContext } from './NavigationRouteContext';\nimport type { RouteProp } from './types';\n\n/**\n * Hook to access the route prop of the parent screen anywhere.\n *\n * @returns Route prop of the parent screen.\n */\nexport function useRoute<T extends RouteProp<ParamListBase>>(): T {\n  const route = React.useContext(NavigationRouteContext);\n\n  if (route === undefined) {\n    throw new Error(\n      \"Couldn't find a route object. Is your component inside a screen in a navigator?\"\n    );\n  }\n\n  return route as T;\n}\n"],"mappings":";;;AACA,OAAO,KAAKA,KAAK,MAAM,OAAO;AAE9B,SAASC,sBAAsB,QAAQ,6BAA0B;AAQjE,OAAO,SAASC,QAAQA,CAAA,EAA0C;EAAAC,EAAA;EAChE,MAAMC,KAAK,GAAGJ,KAAK,CAACK,UAAU,CAACJ,sBAAsB,CAAC;EAEtD,IAAIG,KAAK,KAAKE,SAAS,EAAE;IACvB,MAAM,IAAIC,KAAK,CACb,iFACF,CAAC;EACH;EAEA,OAAOH,KAAK;AACd;AAAAD,EAAA,CAVgBD,QAAQ","ignoreList":[]},"metadata":{"hasCjsExports":false},"sourceType":"module","externalDependencies":[]}