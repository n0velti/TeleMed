{"ast":null,"code":"import getDevServer from './getDevServer';\nexport function buildUrlForBundle(bundlePath) {\n  if (/^https?:\\/\\//.test(bundlePath)) {\n    return bundlePath;\n  }\n  const {\n    url: baseURL\n  } = getDevServer();\n  return baseURL ? new URL(bundlePath, baseURL).toString() : `//${bundlePath.replace(/^\\/+/, '')}`;\n}","map":{"version":3,"names":["getDevServer","buildUrlForBundle","bundlePath","test","url","baseURL","URL","toString","replace"],"sources":["/Users/edward/Documents/TeleMed/TeleMed/node_modules/expo/src/async-require/buildUrlForBundle.ts"],"sourcesContent":["/**\n * Copyright Â© 2022 650 Industries.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport getDevServer from './getDevServer';\n\n/**\n * Given a path and some optional additional query parameters, create the dev server bundle URL.\n * @param bundlePath like `/foobar`\n * @param params like `{ platform: \"web\" }`\n * @returns a URL like \"/foobar.bundle?platform=android&modulesOnly=true&runModule=false&runtimeBytecodeVersion=null\"\n */\nexport function buildUrlForBundle(bundlePath: string): string {\n  if (/^https?:\\/\\//.test(bundlePath)) {\n    return bundlePath;\n  }\n  const { url: baseURL } = getDevServer();\n  return baseURL ? new URL(bundlePath, baseURL).toString() : `//${bundlePath.replace(/^\\/+/, '')}`;\n}\n"],"mappings":"AAOA,OAAOA,YAAY,MAAM,gBAAgB;AAQzC,OAAO,SAASC,iBAAiBA,CAACC,UAAkB,EAAU;EAC5D,IAAI,cAAc,CAACC,IAAI,CAACD,UAAU,CAAC,EAAE;IACnC,OAAOA,UAAU;EACnB;EACA,MAAM;IAAEE,GAAG,EAAEC;EAAQ,CAAC,GAAGL,YAAY,CAAC,CAAC;EACvC,OAAOK,OAAO,GAAG,IAAIC,GAAG,CAACJ,UAAU,EAAEG,OAAO,CAAC,CAACE,QAAQ,CAAC,CAAC,GAAG,KAAKL,UAAU,CAACM,OAAO,CAAC,MAAM,EAAE,EAAE,CAAC,EAAE;AAClG","ignoreList":[]},"metadata":{"hasCjsExports":false},"sourceType":"module","externalDependencies":[]}