{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.isRoutePreloadedInStack = isRoutePreloadedInStack;\nfunction isRoutePreloadedInStack(navigationState, route) {\n  if (!navigationState || navigationState.type !== 'stack') {\n    return false;\n  }\n  return navigationState.preloadedRoutes.some(preloaded => preloaded.key === route.key);\n}","map":{"version":3,"names":["exports","isRoutePreloadedInStack","navigationState","route","type","preloadedRoutes","some","preloaded","key"],"sources":["/Users/edward/Documents/TeleMed/TeleMed/node_modules/expo-router/src/utils/stack.ts"],"sourcesContent":["import type {\n  NavigationState,\n  ParamListBase,\n  StackNavigationState,\n} from '@react-navigation/native';\n\nexport function isRoutePreloadedInStack(\n  navigationState: NavigationState | undefined,\n  route: { key: string }\n): boolean {\n  if (!navigationState || navigationState.type !== 'stack') {\n    return false;\n  }\n  return (navigationState as StackNavigationState<ParamListBase>).preloadedRoutes.some(\n    (preloaded) => preloaded.key === route.key\n  );\n}\n"],"mappings":";;;;;AAMAA,OAAA,CAAAC,uBAAA,GAAAA,uBAAA;AAAA,SAAgBA,uBAAuBA,CACrCC,eAA4C,EAC5CC,KAAsB;EAEtB,IAAI,CAACD,eAAe,IAAIA,eAAe,CAACE,IAAI,KAAK,OAAO,EAAE;IACxD,OAAO,KAAK;EACd;EACA,OAAQF,eAAuD,CAACG,eAAe,CAACC,IAAI,CACjFC,SAAS,IAAKA,SAAS,CAACC,GAAG,KAAKL,KAAK,CAACK,GAAG,CAC3C;AACH","ignoreList":[]},"metadata":{"hasCjsExports":true},"sourceType":"script","externalDependencies":[]}