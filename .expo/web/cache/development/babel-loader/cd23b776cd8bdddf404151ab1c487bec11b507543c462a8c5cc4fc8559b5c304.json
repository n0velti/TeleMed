{"ast":null,"code":"var _jsxFileName = \"/Users/edward/Documents/TeleMed/TeleMed/node_modules/@expo/metro-runtime/src/error-overlay/toast/ErrorToast.tsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { useEffect } from 'react';\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport Pressable from \"react-native-web/dist/exports/Pressable\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { ErrorToastMessage } from './ErrorToastMessage';\nimport * as LogBoxData from '../Data/LogBoxData';\nimport * as LogBoxStyle from '../UI/LogBoxStyle';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction useSymbolicatedLog(log) {\n  _s();\n  useEffect(() => {\n    LogBoxData.symbolicateLogLazy('stack', log);\n    LogBoxData.symbolicateLogLazy('component', log);\n  }, [log]);\n}\n_s(useSymbolicatedLog, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\nexport function ErrorToast(props) {\n  _s2();\n  const {\n    totalLogCount,\n    level,\n    log\n  } = props;\n  useSymbolicatedLog(log);\n  return _jsxDEV(View, {\n    style: toastStyles.container,\n    children: _jsxDEV(Pressable, {\n      style: {\n        flex: 1\n      },\n      onPress: props.onPressOpen,\n      children: ({\n        hovered,\n        pressed\n      }) => _jsxDEV(View, {\n        style: [toastStyles.press, {\n          transitionDuration: '150ms',\n          backgroundColor: pressed ? '#323232' : hovered ? '#111111' : LogBoxStyle.getBackgroundColor()\n        }],\n        children: [_jsxDEV(Count, {\n          count: totalLogCount,\n          level: level\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 13\n        }, this), _jsxDEV(ErrorToastMessage, {\n          message: log.message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 13\n        }, this), _jsxDEV(Dismiss, {\n          onPress: props.onPressDismiss\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n}\n_s2(ErrorToast, \"13KGuq6LXLDvdTLMzyFV7ezb97w=\", false, function () {\n  return [useSymbolicatedLog];\n});\n_c = ErrorToast;\nfunction Count({\n  count,\n  level\n}) {\n  return _jsxDEV(View, {\n    style: [countStyles.inside, countStyles[level]],\n    children: _jsxDEV(Text, {\n      style: countStyles.text,\n      children: count <= 1 ? '!' : count\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 5\n  }, this);\n}\n_c2 = Count;\nfunction Dismiss({\n  onPress\n}) {\n  return _jsxDEV(Pressable, {\n    style: {\n      marginLeft: 5\n    },\n    hitSlop: {\n      top: 12,\n      right: 10,\n      bottom: 12,\n      left: 10\n    },\n    onPress: onPress,\n    children: ({\n      hovered,\n      pressed\n    }) => _jsxDEV(View, {\n      style: [dismissStyles.press, hovered && {\n        opacity: 0.8\n      }, pressed && {\n        opacity: 0.5\n      }],\n      children: _jsxDEV(Image, {\n        source: require('@expo/metro-runtime/assets/close.png'),\n        style: dismissStyles.image\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 78,\n    columnNumber: 5\n  }, this);\n}\n_c3 = Dismiss;\nconst countStyles = StyleSheet.create({\n  warn: {\n    backgroundColor: LogBoxStyle.getWarningColor(1)\n  },\n  error: {\n    backgroundColor: LogBoxStyle.getErrorColor(1)\n  },\n  log: {\n    backgroundColor: LogBoxStyle.getLogColor(1)\n  },\n  inside: {\n    marginRight: 8,\n    minWidth: 22,\n    aspectRatio: 1,\n    paddingHorizontal: 4,\n    borderRadius: 11,\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  text: Object.assign({\n    color: LogBoxStyle.getTextColor(1),\n    fontSize: 14,\n    lineHeight: 18,\n    textAlign: 'center',\n    fontWeight: '600'\n  }, Platform.select({\n    web: {\n      textShadow: `0px 0px 3px ${LogBoxStyle.getBackgroundColor(0.8)}`\n    }\n  }))\n});\nconst dismissStyles = StyleSheet.create({\n  press: {\n    backgroundColor: '#323232',\n    height: 20,\n    width: 20,\n    borderRadius: 25,\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  image: {\n    height: 8,\n    width: 8\n  }\n});\nconst toastStyles = StyleSheet.create({\n  container: {\n    height: 48,\n    justifyContent: 'center',\n    marginBottom: 4\n  },\n  press: {\n    borderWidth: 1,\n    borderRadius: 8,\n    overflow: 'hidden',\n    flexDirection: 'row',\n    alignItems: 'center',\n    borderColor: '#323232',\n    backgroundColor: LogBoxStyle.getBackgroundColor(),\n    flex: 1,\n    paddingHorizontal: 12\n  }\n});\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"ErrorToast\");\n$RefreshReg$(_c2, \"Count\");\n$RefreshReg$(_c3, \"Dismiss\");","map":{"version":3,"names":["React","useEffect","Image","Platform","Pressable","StyleSheet","Text","View","ErrorToastMessage","LogBoxData","LogBoxStyle","jsxDEV","_jsxDEV","useSymbolicatedLog","log","_s","symbolicateLogLazy","ErrorToast","props","_s2","totalLogCount","level","style","toastStyles","container","children","flex","onPress","onPressOpen","hovered","pressed","press","transitionDuration","backgroundColor","getBackgroundColor","Count","count","fileName","_jsxFileName","lineNumber","columnNumber","message","Dismiss","onPressDismiss","_c","countStyles","inside","text","_c2","marginLeft","hitSlop","top","right","bottom","left","dismissStyles","opacity","source","require","image","_c3","create","warn","getWarningColor","error","getErrorColor","getLogColor","marginRight","minWidth","aspectRatio","paddingHorizontal","borderRadius","justifyContent","alignItems","Object","assign","color","getTextColor","fontSize","lineHeight","textAlign","fontWeight","select","web","textShadow","height","width","marginBottom","borderWidth","overflow","flexDirection","borderColor","$RefreshReg$"],"sources":["/Users/edward/Documents/TeleMed/TeleMed/node_modules/@expo/metro-runtime/src/error-overlay/toast/ErrorToast.tsx"],"sourcesContent":["/**\n * Copyright (c) 650 Industries.\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React, { useEffect } from 'react';\nimport { Image, Platform, Pressable, StyleSheet, Text, View } from 'react-native';\n\nimport { ErrorToastMessage } from './ErrorToastMessage';\nimport * as LogBoxData from '../Data/LogBoxData';\nimport { LogBoxLog } from '../Data/LogBoxLog';\nimport * as LogBoxStyle from '../UI/LogBoxStyle';\n\ntype Props = {\n  log: LogBoxLog;\n  totalLogCount: number;\n  level: 'warn' | 'error';\n  onPressOpen: () => void;\n  onPressDismiss: () => void;\n};\n\nfunction useSymbolicatedLog(log: LogBoxLog) {\n  // Eagerly symbolicate so the stack is available when pressing to inspect.\n  useEffect(() => {\n    LogBoxData.symbolicateLogLazy('stack', log);\n    LogBoxData.symbolicateLogLazy('component', log);\n  }, [log]);\n}\n\nexport function ErrorToast(props: Props) {\n  const { totalLogCount, level, log } = props;\n\n  useSymbolicatedLog(log);\n\n  return (\n    <View style={toastStyles.container}>\n      <Pressable style={{ flex: 1 }} onPress={props.onPressOpen}>\n        {({\n          /** @ts-expect-error: react-native types are broken. */\n          hovered,\n          pressed,\n        }) => (\n          <View\n            style={[\n              toastStyles.press,\n              {\n                // @ts-expect-error: web-only type\n                transitionDuration: '150ms',\n                backgroundColor: pressed\n                  ? '#323232'\n                  : hovered\n                    ? '#111111'\n                    : LogBoxStyle.getBackgroundColor(),\n              },\n            ]}>\n            <Count count={totalLogCount} level={level} />\n            <ErrorToastMessage message={log.message} />\n            <Dismiss onPress={props.onPressDismiss} />\n          </View>\n        )}\n      </Pressable>\n    </View>\n  );\n}\n\nfunction Count({ count, level }: { count: number; level: Props['level'] }) {\n  return (\n    <View style={[countStyles.inside, countStyles[level]]}>\n      <Text style={countStyles.text}>{count <= 1 ? '!' : count}</Text>\n    </View>\n  );\n}\n\nfunction Dismiss({ onPress }: { onPress: () => void }) {\n  return (\n    <Pressable\n      style={{\n        marginLeft: 5,\n      }}\n      hitSlop={{\n        top: 12,\n        right: 10,\n        bottom: 12,\n        left: 10,\n      }}\n      onPress={onPress}>\n      {({\n        /** @ts-expect-error: react-native types are broken. */\n        hovered,\n        pressed,\n      }) => (\n        <View\n          style={[dismissStyles.press, hovered && { opacity: 0.8 }, pressed && { opacity: 0.5 }]}>\n          <Image\n            source={require('@expo/metro-runtime/assets/close.png')}\n            style={dismissStyles.image}\n          />\n        </View>\n      )}\n    </Pressable>\n  );\n}\n\nconst countStyles = StyleSheet.create({\n  warn: {\n    backgroundColor: LogBoxStyle.getWarningColor(1),\n  },\n  error: {\n    backgroundColor: LogBoxStyle.getErrorColor(1),\n  },\n  log: {\n    backgroundColor: LogBoxStyle.getLogColor(1),\n  },\n  inside: {\n    marginRight: 8,\n    minWidth: 22,\n    aspectRatio: 1,\n    paddingHorizontal: 4,\n    borderRadius: 11,\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n  text: {\n    color: LogBoxStyle.getTextColor(1),\n    fontSize: 14,\n    lineHeight: 18,\n    textAlign: 'center',\n    fontWeight: '600',\n    ...Platform.select({\n      web: {\n        textShadow: `0px 0px 3px ${LogBoxStyle.getBackgroundColor(0.8)}`,\n      },\n    }),\n  },\n});\n\nconst dismissStyles = StyleSheet.create({\n  press: {\n    backgroundColor: '#323232',\n    height: 20,\n    width: 20,\n    borderRadius: 25,\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  image: {\n    height: 8,\n    width: 8,\n  },\n});\n\nconst toastStyles = StyleSheet.create({\n  container: {\n    height: 48,\n    justifyContent: 'center',\n    marginBottom: 4,\n  },\n  press: {\n    borderWidth: 1,\n    borderRadius: 8,\n    overflow: 'hidden',\n    flexDirection: 'row',\n    alignItems: 'center',\n    borderColor: '#323232',\n    backgroundColor: LogBoxStyle.getBackgroundColor(),\n    flex: 1,\n    paddingHorizontal: 12,\n  },\n});\n"],"mappings":";;;AAOA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AAAC,OAAAC,KAAA;AAAA,OAAAC,QAAA;AAAA,OAAAC,SAAA;AAAA,OAAAC,UAAA;AAAA,OAAAC,IAAA;AAAA,OAAAC,IAAA;AAGzC,SAASC,iBAAiB,QAAQ,qBAAqB;AACvD,OAAO,KAAKC,UAAU,MAAM,oBAAoB;AAEhD,OAAO,KAAKC,WAAW,MAAM,mBAAmB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAUjD,SAASC,kBAAkBA,CAACC,GAAc,EAAE;EAAAC,EAAA;EAE1Cd,SAAS,CAAC,MAAM;IACdQ,UAAU,CAACO,kBAAkB,CAAC,OAAO,EAAEF,GAAG,CAAC;IAC3CL,UAAU,CAACO,kBAAkB,CAAC,WAAW,EAAEF,GAAG,CAAC;EACjD,CAAC,EAAE,CAACA,GAAG,CAAC,CAAC;AACX;AAACC,EAAA,CANQF,kBAAkB;AAQ3B,OAAO,SAASI,UAAUA,CAACC,KAAY,EAAE;EAAAC,GAAA;EACvC,MAAM;IAAEC,aAAa;IAAEC,KAAK;IAAEP;EAAI,CAAC,GAAGI,KAAK;EAE3CL,kBAAkB,CAACC,GAAG,CAAC;EAEvB,OACEF,OAAA,CAACL,IAAI;IAACe,KAAK,EAAEC,WAAW,CAACC,SAAU;IAAAC,QAAA,EACjCb,OAAA,CAACR,SAAS;MAACkB,KAAK,EAAE;QAAEI,IAAI,EAAE;MAAE,CAAE;MAACC,OAAO,EAAET,KAAK,CAACU,WAAY;MAAAH,QAAA,EACvDA,CAAC;QAEAI,OAAO;QACPC;MACF,CAAC,KACClB,OAAA,CAACL,IAAI;QACHe,KAAK,EAAE,CACLC,WAAW,CAACQ,KAAK,EACjB;UAEEC,kBAAkB,EAAE,OAAO;UAC3BC,eAAe,EAAEH,OAAO,GACpB,SAAS,GACTD,OAAO,GACL,SAAS,GACTnB,WAAW,CAACwB,kBAAkB,CAAC;QACvC,CAAC,CACD;QAAAT,QAAA,GACFb,OAAA,CAACuB,KAAK;UAACC,KAAK,EAAEhB,aAAc;UAACC,KAAK,EAAEA;QAAM;UAAAgB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,EAC7C5B,OAAA,CAACJ,iBAAiB;UAACiC,OAAO,EAAE3B,GAAG,CAAC2B;QAAQ;UAAAJ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,EAC3C5B,OAAA,CAAC8B,OAAO;UAACf,OAAO,EAAET,KAAK,CAACyB;QAAe;UAAAN,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACtC;IACP;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACQ;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACR,CAAC;AAEX;AAACrB,GAAA,CAlCeF,UAAU;EAAA,QAGxBJ,kBAAkB;AAAA;AAAA+B,EAAA,GAHJ3B,UAAU;AAoC1B,SAASkB,KAAKA,CAAC;EAAEC,KAAK;EAAEf;AAAgD,CAAC,EAAE;EACzE,OACET,OAAA,CAACL,IAAI;IAACe,KAAK,EAAE,CAACuB,WAAW,CAACC,MAAM,EAAED,WAAW,CAACxB,KAAK,CAAC,CAAE;IAAAI,QAAA,EACpDb,OAAA,CAACN,IAAI;MAACgB,KAAK,EAAEuB,WAAW,CAACE,IAAK;MAAAtB,QAAA,EAAEW,KAAK,IAAI,CAAC,GAAG,GAAG,GAAGA;IAAK;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAO;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC5D,CAAC;AAEX;AAACQ,GAAA,GANQb,KAAK;AAQd,SAASO,OAAOA,CAAC;EAAEf;AAAiC,CAAC,EAAE;EACrD,OACEf,OAAA,CAACR,SAAS;IACRkB,KAAK,EAAE;MACL2B,UAAU,EAAE;IACd,CAAE;IACFC,OAAO,EAAE;MACPC,GAAG,EAAE,EAAE;MACPC,KAAK,EAAE,EAAE;MACTC,MAAM,EAAE,EAAE;MACVC,IAAI,EAAE;IACR,CAAE;IACF3B,OAAO,EAAEA,OAAQ;IAAAF,QAAA,EAChBA,CAAC;MAEAI,OAAO;MACPC;IACF,CAAC,KACClB,OAAA,CAACL,IAAI;MACHe,KAAK,EAAE,CAACiC,aAAa,CAACxB,KAAK,EAAEF,OAAO,IAAI;QAAE2B,OAAO,EAAE;MAAI,CAAC,EAAE1B,OAAO,IAAI;QAAE0B,OAAO,EAAE;MAAI,CAAC,CAAE;MAAA/B,QAAA,EACvFb,OAAA,CAACV,KAAK;QACJuD,MAAM,EAAEC,OAAO,CAAC,sCAAsC,CAAE;QACxDpC,KAAK,EAAEiC,aAAa,CAACI;MAAM;QAAAtB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC5B;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE;EACP;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACQ,CAAC;AAEhB;AAACoB,GAAA,GA5BQlB,OAAO;AA8BhB,MAAMG,WAAW,GAAGxC,UAAU,CAACwD,MAAM,CAAC;EACpCC,IAAI,EAAE;IACJ7B,eAAe,EAAEvB,WAAW,CAACqD,eAAe,CAAC,CAAC;EAChD,CAAC;EACDC,KAAK,EAAE;IACL/B,eAAe,EAAEvB,WAAW,CAACuD,aAAa,CAAC,CAAC;EAC9C,CAAC;EACDnD,GAAG,EAAE;IACHmB,eAAe,EAAEvB,WAAW,CAACwD,WAAW,CAAC,CAAC;EAC5C,CAAC;EACDpB,MAAM,EAAE;IACNqB,WAAW,EAAE,CAAC;IACdC,QAAQ,EAAE,EAAE;IACZC,WAAW,EAAE,CAAC;IACdC,iBAAiB,EAAE,CAAC;IACpBC,YAAY,EAAE,EAAE;IAChBC,cAAc,EAAE,QAAQ;IACxBC,UAAU,EAAE;EACd,CAAC;EACD1B,IAAI,EAAA2B,MAAA,CAAAC,MAAA;IACFC,KAAK,EAAElE,WAAW,CAACmE,YAAY,CAAC,CAAC,CAAC;IAClCC,QAAQ,EAAE,EAAE;IACZC,UAAU,EAAE,EAAE;IACdC,SAAS,EAAE,QAAQ;IACnBC,UAAU,EAAE;EAAK,GACd9E,QAAQ,CAAC+E,MAAM,CAAC;IACjBC,GAAG,EAAE;MACHC,UAAU,EAAE,eAAe1E,WAAW,CAACwB,kBAAkB,CAAC,GAAG,CAAC;IAChE;EACF,CAAC,CAAC;AAEN,CAAC,CAAC;AAEF,MAAMqB,aAAa,GAAGlD,UAAU,CAACwD,MAAM,CAAC;EACtC9B,KAAK,EAAE;IACLE,eAAe,EAAE,SAAS;IAC1BoD,MAAM,EAAE,EAAE;IACVC,KAAK,EAAE,EAAE;IACTf,YAAY,EAAE,EAAE;IAChBE,UAAU,EAAE,QAAQ;IACpBD,cAAc,EAAE;EAClB,CAAC;EACDb,KAAK,EAAE;IACL0B,MAAM,EAAE,CAAC;IACTC,KAAK,EAAE;EACT;AACF,CAAC,CAAC;AAEF,MAAM/D,WAAW,GAAGlB,UAAU,CAACwD,MAAM,CAAC;EACpCrC,SAAS,EAAE;IACT6D,MAAM,EAAE,EAAE;IACVb,cAAc,EAAE,QAAQ;IACxBe,YAAY,EAAE;EAChB,CAAC;EACDxD,KAAK,EAAE;IACLyD,WAAW,EAAE,CAAC;IACdjB,YAAY,EAAE,CAAC;IACfkB,QAAQ,EAAE,QAAQ;IAClBC,aAAa,EAAE,KAAK;IACpBjB,UAAU,EAAE,QAAQ;IACpBkB,WAAW,EAAE,SAAS;IACtB1D,eAAe,EAAEvB,WAAW,CAACwB,kBAAkB,CAAC,CAAC;IACjDR,IAAI,EAAE,CAAC;IACP4C,iBAAiB,EAAE;EACrB;AACF,CAAC,CAAC;AAAC,IAAA1B,EAAA,EAAAI,GAAA,EAAAY,GAAA;AAAAgC,YAAA,CAAAhD,EAAA;AAAAgD,YAAA,CAAA5C,GAAA;AAAA4C,YAAA,CAAAhC,GAAA","ignoreList":[]},"metadata":{"hasCjsExports":false},"sourceType":"module","externalDependencies":[]}