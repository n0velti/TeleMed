{"ast":null,"code":"var _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React from 'react';\nimport ExceptionsManager from './modules/ExceptionsManager';\nfunction useStackTraceLimit(limit) {\n  _s();\n  const current = React.useRef(0);\n  React.useEffect(() => {\n    try {\n      const currentLimit = Error.stackTraceLimit;\n      Error.stackTraceLimit = limit;\n      current.current = currentLimit;\n    } catch {}\n    return () => {\n      try {\n        Error.stackTraceLimit = current.current;\n      } catch {}\n    };\n  }, [limit]);\n}\n_s(useStackTraceLimit, \"QHHAFAoJP/ZQELoLYXVmybEPq8U=\");\nexport function useRejectionHandler() {\n  _s2();\n  const hasError = React.useRef(false);\n  useStackTraceLimit(35);\n  React.useEffect(() => {\n    function onUnhandledError(ev) {\n      hasError.current = true;\n      const error = ev?.error;\n      if (!error || !(error instanceof Error) || typeof error.stack !== 'string') {\n        return;\n      }\n      ExceptionsManager.handleException(error);\n    }\n    function onUnhandledRejection(ev) {\n      hasError.current = true;\n      const reason = ev?.reason;\n      if (!reason || !(reason instanceof Error) || typeof reason.stack !== 'string') {\n        return;\n      }\n      ExceptionsManager.handleException(reason);\n    }\n    window.addEventListener('unhandledrejection', onUnhandledRejection);\n    window.addEventListener('error', onUnhandledError);\n    return () => {\n      window.removeEventListener('error', onUnhandledError);\n      window.removeEventListener('unhandledrejection', onUnhandledRejection);\n    };\n  }, []);\n  return hasError;\n}\n_s2(useRejectionHandler, \"ERHI3UtUiirRibSN3cONYUCqnAw=\", false, function () {\n  return [useStackTraceLimit];\n});","map":{"version":3,"names":["React","ExceptionsManager","useStackTraceLimit","limit","_s","current","useRef","useEffect","currentLimit","Error","stackTraceLimit","useRejectionHandler","_s2","hasError","onUnhandledError","ev","error","stack","handleException","onUnhandledRejection","reason","window","addEventListener","removeEventListener"],"sources":["/Users/edward/Documents/TeleMed/TeleMed/node_modules/@expo/metro-runtime/src/error-overlay/useRejectionHandler.ts"],"sourcesContent":["import React from 'react';\n\nimport ExceptionsManager from './modules/ExceptionsManager';\n\nfunction useStackTraceLimit(limit: number) {\n  const current = React.useRef(0);\n  React.useEffect(() => {\n    try {\n      // @ts-expect-error: StackTraceLimit is not defined in the Error type\n      const currentLimit = Error.stackTraceLimit;\n      // @ts-expect-error: StackTraceLimit is not defined in the Error type\n      Error.stackTraceLimit = limit;\n      current.current = currentLimit;\n    } catch {}\n    return () => {\n      try {\n        // @ts-expect-error: StackTraceLimit is not defined in the Error type\n        Error.stackTraceLimit = current.current;\n      } catch {}\n    };\n  }, [limit]);\n}\n\nexport function useRejectionHandler() {\n  const hasError = React.useRef(false);\n\n  useStackTraceLimit(35);\n\n  React.useEffect(() => {\n    function onUnhandledError(ev: ErrorEvent) {\n      hasError.current = true;\n\n      const error = ev?.error;\n      if (!error || !(error instanceof Error) || typeof error.stack !== 'string') {\n        return;\n      }\n\n      ExceptionsManager.handleException(error);\n    }\n\n    function onUnhandledRejection(ev: PromiseRejectionEvent) {\n      hasError.current = true;\n\n      const reason = ev?.reason;\n      if (!reason || !(reason instanceof Error) || typeof reason.stack !== 'string') {\n        return;\n      }\n\n      ExceptionsManager.handleException(reason);\n    }\n\n    window.addEventListener('unhandledrejection', onUnhandledRejection);\n    window.addEventListener('error', onUnhandledError);\n    return () => {\n      window.removeEventListener('error', onUnhandledError);\n      window.removeEventListener('unhandledrejection', onUnhandledRejection);\n    };\n  }, []);\n\n  return hasError;\n}\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,OAAOC,iBAAiB,MAAM,6BAA6B;AAE3D,SAASC,kBAAkBA,CAACC,KAAa,EAAE;EAAAC,EAAA;EACzC,MAAMC,OAAO,GAAGL,KAAK,CAACM,MAAM,CAAC,CAAC,CAAC;EAC/BN,KAAK,CAACO,SAAS,CAAC,MAAM;IACpB,IAAI;MAEF,MAAMC,YAAY,GAAGC,KAAK,CAACC,eAAe;MAE1CD,KAAK,CAACC,eAAe,GAAGP,KAAK;MAC7BE,OAAO,CAACA,OAAO,GAAGG,YAAY;IAChC,CAAC,CAAC,MAAM,CAAC;IACT,OAAO,MAAM;MACX,IAAI;QAEFC,KAAK,CAACC,eAAe,GAAGL,OAAO,CAACA,OAAO;MACzC,CAAC,CAAC,MAAM,CAAC;IACX,CAAC;EACH,CAAC,EAAE,CAACF,KAAK,CAAC,CAAC;AACb;AAACC,EAAA,CAjBQF,kBAAkB;AAmB3B,OAAO,SAASS,mBAAmBA,CAAA,EAAG;EAAAC,GAAA;EACpC,MAAMC,QAAQ,GAAGb,KAAK,CAACM,MAAM,CAAC,KAAK,CAAC;EAEpCJ,kBAAkB,CAAC,EAAE,CAAC;EAEtBF,KAAK,CAACO,SAAS,CAAC,MAAM;IACpB,SAASO,gBAAgBA,CAACC,EAAc,EAAE;MACxCF,QAAQ,CAACR,OAAO,GAAG,IAAI;MAEvB,MAAMW,KAAK,GAAGD,EAAE,EAAEC,KAAK;MACvB,IAAI,CAACA,KAAK,IAAI,EAAEA,KAAK,YAAYP,KAAK,CAAC,IAAI,OAAOO,KAAK,CAACC,KAAK,KAAK,QAAQ,EAAE;QAC1E;MACF;MAEAhB,iBAAiB,CAACiB,eAAe,CAACF,KAAK,CAAC;IAC1C;IAEA,SAASG,oBAAoBA,CAACJ,EAAyB,EAAE;MACvDF,QAAQ,CAACR,OAAO,GAAG,IAAI;MAEvB,MAAMe,MAAM,GAAGL,EAAE,EAAEK,MAAM;MACzB,IAAI,CAACA,MAAM,IAAI,EAAEA,MAAM,YAAYX,KAAK,CAAC,IAAI,OAAOW,MAAM,CAACH,KAAK,KAAK,QAAQ,EAAE;QAC7E;MACF;MAEAhB,iBAAiB,CAACiB,eAAe,CAACE,MAAM,CAAC;IAC3C;IAEAC,MAAM,CAACC,gBAAgB,CAAC,oBAAoB,EAAEH,oBAAoB,CAAC;IACnEE,MAAM,CAACC,gBAAgB,CAAC,OAAO,EAAER,gBAAgB,CAAC;IAClD,OAAO,MAAM;MACXO,MAAM,CAACE,mBAAmB,CAAC,OAAO,EAAET,gBAAgB,CAAC;MACrDO,MAAM,CAACE,mBAAmB,CAAC,oBAAoB,EAAEJ,oBAAoB,CAAC;IACxE,CAAC;EACH,CAAC,EAAE,EAAE,CAAC;EAEN,OAAON,QAAQ;AACjB;AAACD,GAAA,CArCeD,mBAAmB;EAAA,QAGjCT,kBAAkB;AAAA","ignoreList":[]},"metadata":{"hasCjsExports":false},"sourceType":"module","externalDependencies":[]}