{"ast":null,"code":"\"use strict\";\n\nvar _s = $RefreshSig$();\nimport { nanoid } from 'nanoid/non-secure';\nimport * as React from 'react';\nimport useLatestCallback from 'use-latest-callback';\nimport { useNavigation } from \"./useNavigation.js\";\nimport { usePreventRemoveContext } from \"./usePreventRemoveContext.js\";\nimport { useRoute } from \"./useRoute.js\";\nexport function usePreventRemove(preventRemove, callback) {\n  _s();\n  const [id] = React.useState(() => nanoid());\n  const navigation = useNavigation();\n  const {\n    key: routeKey\n  } = useRoute();\n  const {\n    setPreventRemove\n  } = usePreventRemoveContext();\n  React.useEffect(() => {\n    setPreventRemove(id, routeKey, preventRemove);\n    return () => {\n      setPreventRemove(id, routeKey, false);\n    };\n  }, [setPreventRemove, id, routeKey, preventRemove]);\n  const beforeRemoveListener = useLatestCallback(e => {\n    if (!preventRemove) {\n      return;\n    }\n    e.preventDefault();\n    callback({\n      data: e.data\n    });\n  });\n  React.useEffect(() => navigation?.addListener('beforeRemove', beforeRemoveListener), [navigation, beforeRemoveListener]);\n}\n_s(usePreventRemove, \"7vD1/NxstGM+WbBWRFNOR19sIqI=\", false, function () {\n  return [useNavigation, useRoute, usePreventRemoveContext, useLatestCallback];\n});","map":{"version":3,"names":["nanoid","React","useLatestCallback","useNavigation","usePreventRemoveContext","useRoute","usePreventRemove","preventRemove","callback","_s","id","useState","navigation","key","routeKey","setPreventRemove","useEffect","beforeRemoveListener","e","preventDefault","data","addListener"],"sources":["/Users/edward/Documents/TeleMed/TeleMed/node_modules/@react-navigation/core/src/usePreventRemove.tsx"],"sourcesContent":["import type { NavigationAction } from '@react-navigation/routers';\nimport { nanoid } from 'nanoid/non-secure';\nimport * as React from 'react';\nimport useLatestCallback from 'use-latest-callback';\n\nimport type { EventListenerCallback, EventMapCore } from './types';\nimport { useNavigation } from './useNavigation';\nimport { usePreventRemoveContext } from './usePreventRemoveContext';\nimport { useRoute } from './useRoute';\n\n/**\n * Hook to prevent screen from being removed. Can be used to prevent users from leaving the screen.\n *\n * @param preventRemove Boolean indicating whether to prevent screen from being removed.\n * @param callback Function which is executed when screen was prevented from being removed.\n */\nexport function usePreventRemove(\n  preventRemove: boolean,\n  callback: (options: { data: { action: NavigationAction } }) => void\n) {\n  const [id] = React.useState(() => nanoid());\n\n  const navigation = useNavigation();\n  const { key: routeKey } = useRoute();\n\n  const { setPreventRemove } = usePreventRemoveContext();\n\n  React.useEffect(() => {\n    setPreventRemove(id, routeKey, preventRemove);\n    return () => {\n      setPreventRemove(id, routeKey, false);\n    };\n  }, [setPreventRemove, id, routeKey, preventRemove]);\n\n  const beforeRemoveListener = useLatestCallback<\n    EventListenerCallback<EventMapCore<any>, 'beforeRemove'>\n  >((e) => {\n    if (!preventRemove) {\n      return;\n    }\n\n    e.preventDefault();\n\n    callback({ data: e.data });\n  });\n\n  React.useEffect(\n    () => navigation?.addListener('beforeRemove', beforeRemoveListener),\n    [navigation, beforeRemoveListener]\n  );\n}\n"],"mappings":";;;AACA,SAASA,MAAM,QAAQ,mBAAmB;AAC1C,OAAO,KAAKC,KAAK,MAAM,OAAO;AAC9B,OAAOC,iBAAiB,MAAM,qBAAqB;AAGnD,SAASC,aAAa,QAAQ,oBAAiB;AAC/C,SAASC,uBAAuB,QAAQ,8BAA2B;AACnE,SAASC,QAAQ,QAAQ,eAAY;AAQrC,OAAO,SAASC,gBAAgBA,CAC9BC,aAAsB,EACtBC,QAAmE,EACnE;EAAAC,EAAA;EACA,MAAM,CAACC,EAAE,CAAC,GAAGT,KAAK,CAACU,QAAQ,CAAC,MAAMX,MAAM,CAAC,CAAC,CAAC;EAE3C,MAAMY,UAAU,GAAGT,aAAa,CAAC,CAAC;EAClC,MAAM;IAAEU,GAAG,EAAEC;EAAS,CAAC,GAAGT,QAAQ,CAAC,CAAC;EAEpC,MAAM;IAAEU;EAAiB,CAAC,GAAGX,uBAAuB,CAAC,CAAC;EAEtDH,KAAK,CAACe,SAAS,CAAC,MAAM;IACpBD,gBAAgB,CAACL,EAAE,EAAEI,QAAQ,EAAEP,aAAa,CAAC;IAC7C,OAAO,MAAM;MACXQ,gBAAgB,CAACL,EAAE,EAAEI,QAAQ,EAAE,KAAK,CAAC;IACvC,CAAC;EACH,CAAC,EAAE,CAACC,gBAAgB,EAAEL,EAAE,EAAEI,QAAQ,EAAEP,aAAa,CAAC,CAAC;EAEnD,MAAMU,oBAAoB,GAAGf,iBAAiB,CAE3CgB,CAAC,IAAK;IACP,IAAI,CAACX,aAAa,EAAE;MAClB;IACF;IAEAW,CAAC,CAACC,cAAc,CAAC,CAAC;IAElBX,QAAQ,CAAC;MAAEY,IAAI,EAAEF,CAAC,CAACE;IAAK,CAAC,CAAC;EAC5B,CAAC,CAAC;EAEFnB,KAAK,CAACe,SAAS,CACb,MAAMJ,UAAU,EAAES,WAAW,CAAC,cAAc,EAAEJ,oBAAoB,CAAC,EACnE,CAACL,UAAU,EAAEK,oBAAoB,CACnC,CAAC;AACH;AAAAR,EAAA,CAlCgBH,gBAAgB;EAAA,QAMXH,aAAa,EACNE,QAAQ,EAELD,uBAAuB,EASvBF,iBAAiB;AAAA","ignoreList":[]},"metadata":{"hasCjsExports":false},"sourceType":"module","externalDependencies":[]}