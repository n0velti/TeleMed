{"ast":null,"code":"\"use strict\";\n\nvar _s = $RefreshSig$();\nimport * as React from 'react';\nexport const AnimatedHeaderHeightContext = React.createContext(undefined);\nexport function useAnimatedHeaderHeight() {\n  _s();\n  const animatedValue = React.useContext(AnimatedHeaderHeightContext);\n  if (animatedValue === undefined) {\n    throw new Error(\"Couldn't find the header height. Are you inside a screen in a native stack navigator?\");\n  }\n  return animatedValue;\n}\n_s(useAnimatedHeaderHeight, \"bHuNF9Trr3vw8vf9Wr7U8Jb7j7g=\");","map":{"version":3,"names":["React","AnimatedHeaderHeightContext","createContext","undefined","useAnimatedHeaderHeight","_s","animatedValue","useContext","Error"],"sources":["/Users/edward/Documents/TeleMed/TeleMed/node_modules/@react-navigation/native-stack/src/utils/useAnimatedHeaderHeight.tsx"],"sourcesContent":["import * as React from 'react';\nimport type { Animated } from 'react-native';\n\nexport const AnimatedHeaderHeightContext = React.createContext<\n  Animated.AnimatedInterpolation<number> | undefined\n>(undefined);\n\nexport function useAnimatedHeaderHeight() {\n  const animatedValue = React.useContext(AnimatedHeaderHeightContext);\n\n  if (animatedValue === undefined) {\n    throw new Error(\n      \"Couldn't find the header height. Are you inside a screen in a native stack navigator?\"\n    );\n  }\n\n  return animatedValue;\n}\n"],"mappings":";;;AAAA,OAAO,KAAKA,KAAK,MAAM,OAAO;AAG9B,OAAO,MAAMC,2BAA2B,GAAGD,KAAK,CAACE,aAAa,CAE5DC,SAAS,CAAC;AAEZ,OAAO,SAASC,uBAAuBA,CAAA,EAAG;EAAAC,EAAA;EACxC,MAAMC,aAAa,GAAGN,KAAK,CAACO,UAAU,CAACN,2BAA2B,CAAC;EAEnE,IAAIK,aAAa,KAAKH,SAAS,EAAE;IAC/B,MAAM,IAAIK,KAAK,CACb,uFACF,CAAC;EACH;EAEA,OAAOF,aAAa;AACtB;AAAAD,EAAA,CAVgBD,uBAAuB","ignoreList":[]},"metadata":{"hasCjsExports":false},"sourceType":"module","externalDependencies":[]}