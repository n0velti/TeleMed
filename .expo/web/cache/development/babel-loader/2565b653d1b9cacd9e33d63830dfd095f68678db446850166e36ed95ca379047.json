{"ast":null,"code":"\"use strict\";\n\nvar _s = $RefreshSig$();\nimport * as React from 'react';\nimport { CurrentRenderContext } from \"./CurrentRenderContext.js\";\nexport function useCurrentRender({\n  state,\n  navigation,\n  descriptors\n}) {\n  _s();\n  const current = React.useContext(CurrentRenderContext);\n  if (current && navigation.isFocused()) {\n    current.options = descriptors[state.routes[state.index].key].options;\n  }\n}\n_s(useCurrentRender, \"jxllWgwCPRbCrUF9fUwhri30AaU=\");","map":{"version":3,"names":["React","CurrentRenderContext","useCurrentRender","state","navigation","descriptors","_s","current","useContext","isFocused","options","routes","index","key"],"sources":["/Users/edward/Documents/TeleMed/TeleMed/node_modules/@react-navigation/core/src/useCurrentRender.tsx"],"sourcesContent":["import type { NavigationState, ParamListBase } from '@react-navigation/routers';\nimport * as React from 'react';\n\nimport { CurrentRenderContext } from './CurrentRenderContext';\nimport type {\n  Descriptor,\n  NavigationHelpers,\n  NavigationProp,\n  RouteProp,\n} from './types';\n\ntype Options = {\n  state: NavigationState;\n  navigation: NavigationHelpers<ParamListBase>;\n  descriptors: Record<\n    string,\n    Descriptor<object, NavigationProp<ParamListBase>, RouteProp<ParamListBase>>\n  >;\n};\n\n/**\n * Write the current options, so that server renderer can get current values\n * Mutating values like this is not safe in async mode, but it doesn't apply to SSR\n */\nexport function useCurrentRender({ state, navigation, descriptors }: Options) {\n  const current = React.useContext(CurrentRenderContext);\n\n  if (current && navigation.isFocused()) {\n    current.options = descriptors[state.routes[state.index].key].options;\n  }\n}\n"],"mappings":";;;AACA,OAAO,KAAKA,KAAK,MAAM,OAAO;AAE9B,SAASC,oBAAoB,QAAQ,2BAAwB;AAqB7D,OAAO,SAASC,gBAAgBA,CAAC;EAAEC,KAAK;EAAEC,UAAU;EAAEC;AAAqB,CAAC,EAAE;EAAAC,EAAA;EAC5E,MAAMC,OAAO,GAAGP,KAAK,CAACQ,UAAU,CAACP,oBAAoB,CAAC;EAEtD,IAAIM,OAAO,IAAIH,UAAU,CAACK,SAAS,CAAC,CAAC,EAAE;IACrCF,OAAO,CAACG,OAAO,GAAGL,WAAW,CAACF,KAAK,CAACQ,MAAM,CAACR,KAAK,CAACS,KAAK,CAAC,CAACC,GAAG,CAAC,CAACH,OAAO;EACtE;AACF;AAAAJ,EAAA,CANgBJ,gBAAgB","ignoreList":[]},"metadata":{"hasCjsExports":false},"sourceType":"module","externalDependencies":[]}