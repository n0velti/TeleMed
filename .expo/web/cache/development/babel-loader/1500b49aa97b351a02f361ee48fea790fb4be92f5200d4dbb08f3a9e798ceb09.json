{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.emitDomSetParams = emitDomSetParams;\nexports.emitDomDismiss = emitDomDismiss;\nexports.emitDomGoBack = emitDomGoBack;\nexports.emitDomDismissAll = emitDomDismissAll;\nexports.emitDomLinkEvent = emitDomLinkEvent;\nconst events_1 = require(\"./events\");\nfunction emitDomEvent(type, data = {}) {\n  if (typeof $$EXPO_INITIAL_PROPS !== 'undefined' && typeof ReactNativeWebView !== 'undefined') {\n    window.ReactNativeWebView.postMessage(JSON.stringify({\n      type,\n      data\n    }));\n    return true;\n  }\n  return false;\n}\nfunction emitDomSetParams(params = {}) {\n  return emitDomEvent(events_1.ROUTER_SET_PARAMS_TYPE, {\n    params\n  });\n}\nfunction emitDomDismiss(count) {\n  return emitDomEvent(events_1.ROUTER_DISMISS_TYPE, {\n    count\n  });\n}\nfunction emitDomGoBack() {\n  return emitDomEvent(events_1.ROUTER_BACK_TYPE);\n}\nfunction emitDomDismissAll() {\n  return emitDomEvent(events_1.ROUTER_DISMISS_ALL_TYPE);\n}\nfunction emitDomLinkEvent(href, options) {\n  return emitDomEvent(events_1.ROUTER_LINK_TYPE, {\n    href,\n    options\n  });\n}","map":{"version":3,"names":["exports","emitDomSetParams","emitDomDismiss","emitDomGoBack","emitDomDismissAll","emitDomLinkEvent","events_1","require","emitDomEvent","type","data","$$EXPO_INITIAL_PROPS","ReactNativeWebView","window","postMessage","JSON","stringify","params","ROUTER_SET_PARAMS_TYPE","count","ROUTER_DISMISS_TYPE","ROUTER_BACK_TYPE","ROUTER_DISMISS_ALL_TYPE","href","options","ROUTER_LINK_TYPE"],"sources":["/Users/edward/Documents/TeleMed/TeleMed/node_modules/expo-router/src/domComponents/emitDomEvent.ts"],"sourcesContent":["import {\n  ROUTER_SET_PARAMS_TYPE,\n  ROUTER_DISMISS_TYPE,\n  ROUTER_BACK_TYPE,\n  ROUTER_DISMISS_ALL_TYPE,\n  ROUTER_LINK_TYPE,\n} from './events';\nimport { LinkToOptions } from '../global-state/routing';\n\nfunction emitDomEvent(type: string, data: any = {}) {\n  // @ts-expect-error: ReactNativeWebView is a global variable injected by the WebView\n  if (typeof $$EXPO_INITIAL_PROPS !== 'undefined' && typeof ReactNativeWebView !== 'undefined') {\n    (window as any).ReactNativeWebView.postMessage(JSON.stringify({ type, data }));\n    return true;\n  }\n  return false;\n}\n\nexport function emitDomSetParams(\n  params: Record<string, undefined | string | number | (string | number)[]> = {}\n) {\n  return emitDomEvent(ROUTER_SET_PARAMS_TYPE, { params });\n}\n\nexport function emitDomDismiss(count?: number) {\n  return emitDomEvent(ROUTER_DISMISS_TYPE, { count });\n}\n\nexport function emitDomGoBack() {\n  return emitDomEvent(ROUTER_BACK_TYPE);\n}\n\nexport function emitDomDismissAll() {\n  return emitDomEvent(ROUTER_DISMISS_ALL_TYPE);\n}\n\nexport function emitDomLinkEvent(href: string, options: LinkToOptions) {\n  return emitDomEvent(ROUTER_LINK_TYPE, { href, options });\n}\n"],"mappings":";;;;;AAkBAA,OAAA,CAAAC,gBAAA,GAAAA,gBAAA;AAMAD,OAAA,CAAAE,cAAA,GAAAA,cAAA;AAIAF,OAAA,CAAAG,aAAA,GAAAA,aAAA;AAIAH,OAAA,CAAAI,iBAAA,GAAAA,iBAAA;AAIAJ,OAAA,CAAAK,gBAAA,GAAAA,gBAAA;AApCA,MAAAC,QAAA,GAAAC,OAAA;AASA,SAASC,YAAYA,CAACC,IAAY,EAAEC,IAAA,GAAY,EAAE;EAEhD,IAAI,OAAOC,oBAAoB,KAAK,WAAW,IAAI,OAAOC,kBAAkB,KAAK,WAAW,EAAE;IAC3FC,MAAc,CAACD,kBAAkB,CAACE,WAAW,CAACC,IAAI,CAACC,SAAS,CAAC;MAAEP,IAAI;MAAEC;IAAI,CAAE,CAAC,CAAC;IAC9E,OAAO,IAAI;EACb;EACA,OAAO,KAAK;AACd;AAEA,SAAgBT,gBAAgBA,CAC9BgB,MAAA,GAA4E,EAAE;EAE9E,OAAOT,YAAY,CAACF,QAAA,CAAAY,sBAAsB,EAAE;IAAED;EAAM,CAAE,CAAC;AACzD;AAEA,SAAgBf,cAAcA,CAACiB,KAAc;EAC3C,OAAOX,YAAY,CAACF,QAAA,CAAAc,mBAAmB,EAAE;IAAED;EAAK,CAAE,CAAC;AACrD;AAEA,SAAgBhB,aAAaA,CAAA;EAC3B,OAAOK,YAAY,CAACF,QAAA,CAAAe,gBAAgB,CAAC;AACvC;AAEA,SAAgBjB,iBAAiBA,CAAA;EAC/B,OAAOI,YAAY,CAACF,QAAA,CAAAgB,uBAAuB,CAAC;AAC9C;AAEA,SAAgBjB,gBAAgBA,CAACkB,IAAY,EAAEC,OAAsB;EACnE,OAAOhB,YAAY,CAACF,QAAA,CAAAmB,gBAAgB,EAAE;IAAEF,IAAI;IAAEC;EAAO,CAAE,CAAC;AAC1D","ignoreList":[]},"metadata":{"hasCjsExports":true},"sourceType":"script","externalDependencies":[]}