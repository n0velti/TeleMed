{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Protected = void 0;\nexports.isProtectedReactElement = isProtectedReactElement;\nconst react_1 = require(\"react\");\nconst primitives_1 = require(\"../primitives\");\nexports.Protected = primitives_1.Group;\nfunction isProtectedReactElement(child) {\n  return Boolean((0, react_1.isValidElement)(child) && child.type === primitives_1.Group && child.props && 'guard' in child.props);\n}","map":{"version":3,"names":["exports","isProtectedReactElement","react_1","require","primitives_1","Protected","Group","child","Boolean","isValidElement","type","props"],"sources":["/Users/edward/Documents/TeleMed/TeleMed/node_modules/expo-router/src/views/Protected.tsx"],"sourcesContent":["import { FunctionComponent, isValidElement, ReactElement, ReactNode } from 'react';\n\nimport { Group } from '../primitives';\n\nexport type ProtectedProps = { guard: boolean; children?: ReactNode };\n\nexport const Protected = Group as FunctionComponent<ProtectedProps>;\n\nexport function isProtectedReactElement(child: ReactNode): child is ReactElement<ProtectedProps> {\n  return Boolean(\n    isValidElement(child) && child.type === Group && child.props && 'guard' in (child.props as any)\n  );\n}\n"],"mappings":";;;;;;AAQAA,OAAA,CAAAC,uBAAA,GAAAA,uBAAA;AARA,MAAAC,OAAA,GAAAC,OAAA;AAEA,MAAAC,YAAA,GAAAD,OAAA;AAIaH,OAAA,CAAAK,SAAS,GAAGD,YAAA,CAAAE,KAA0C;AAEnE,SAAgBL,uBAAuBA,CAACM,KAAgB;EACtD,OAAOC,OAAO,CACZ,IAAAN,OAAA,CAAAO,cAAc,EAACF,KAAK,CAAC,IAAIA,KAAK,CAACG,IAAI,KAAKN,YAAA,CAAAE,KAAK,IAAIC,KAAK,CAACI,KAAK,IAAI,OAAO,IAAKJ,KAAK,CAACI,KAAa,CAChG;AACH","ignoreList":[]},"metadata":{"hasCjsExports":true},"sourceType":"script","externalDependencies":[]}