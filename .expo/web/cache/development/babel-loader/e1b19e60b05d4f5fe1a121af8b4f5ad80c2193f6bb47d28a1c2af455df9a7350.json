{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Prefetch = Prefetch;\nconst react_1 = require(\"react\");\nconst imperative_api_1 = require(\"./imperative-api\");\nconst useLoadedNavigation_1 = require(\"./link/useLoadedNavigation\");\nfunction Prefetch(props) {\n  const navigation = (0, useLoadedNavigation_1.useOptionalNavigation)();\n  (0, react_1.useLayoutEffect)(() => {\n    if (navigation?.isFocused()) {\n      imperative_api_1.router.prefetch(props.href);\n    }\n  }, [navigation, props.href]);\n  return null;\n}\n_c = Prefetch;\nvar _c;\n$RefreshReg$(_c, \"Prefetch\");","map":{"version":3,"names":["exports","Prefetch","react_1","require","imperative_api_1","useLoadedNavigation_1","props","navigation","useOptionalNavigation","useLayoutEffect","isFocused","router","prefetch","href","_c","$RefreshReg$"],"sources":["/Users/edward/Documents/TeleMed/TeleMed/node_modules/expo-router/src/Prefetch.tsx"],"sourcesContent":["import { useLayoutEffect } from 'react';\n\nimport { router } from './imperative-api';\nimport { useOptionalNavigation } from './link/useLoadedNavigation';\nimport { Href } from './types';\n\nexport type PreloadProps = {\n  href: Href;\n};\n\n/**\n * When rendered on a focused screen, this component will preload the specified route.\n */\nexport function Prefetch(props: PreloadProps) {\n  const navigation = useOptionalNavigation();\n\n  useLayoutEffect(() => {\n    if (navigation?.isFocused()) {\n      router.prefetch(props.href);\n    }\n  }, [navigation, props.href]);\n\n  return null;\n}\n"],"mappings":";;;;;AAaAA,OAAA,CAAAC,QAAA,GAAAA,QAAA;AAbA,MAAAC,OAAA,GAAAC,OAAA;AAEA,MAAAC,gBAAA,GAAAD,OAAA;AACA,MAAAE,qBAAA,GAAAF,OAAA;AAUA,SAAgBF,QAAQA,CAACK,KAAmB;EAC1C,MAAMC,UAAU,GAAG,IAAAF,qBAAA,CAAAG,qBAAqB,GAAE;EAE1C,IAAAN,OAAA,CAAAO,eAAe,EAAC,MAAK;IACnB,IAAIF,UAAU,EAAEG,SAAS,EAAE,EAAE;MAC3BN,gBAAA,CAAAO,MAAM,CAACC,QAAQ,CAACN,KAAK,CAACO,IAAI,CAAC;IAC7B;EACF,CAAC,EAAE,CAACN,UAAU,EAAED,KAAK,CAACO,IAAI,CAAC,CAAC;EAE5B,OAAO,IAAI;AACb;AAACC,EAAA,GAVeb,QAAQ;AAAA,IAAAa,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{"hasCjsExports":true},"sourceType":"script","externalDependencies":[]}