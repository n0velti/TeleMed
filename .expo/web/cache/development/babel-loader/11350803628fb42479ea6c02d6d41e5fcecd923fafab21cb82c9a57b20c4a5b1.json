{"ast":null,"code":"\"use strict\";\n\nvar _reactJsxDevRuntime = require(\"react/jsx-dev-runtime\");\nvar _jsxFileName = \"/Users/edward/Documents/TeleMed/TeleMed/node_modules/expo-router/build/link/preview/LinkPreviewContext.js\";\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.useLinkPreviewContext = void 0;\nexports.LinkPreviewContextProvider = LinkPreviewContextProvider;\nconst react_1 = require(\"react\");\nconst LinkPreviewContext = (0, react_1.createContext)(undefined);\nfunction LinkPreviewContextProvider({\n  children\n}) {\n  const [openPreviewKey, setOpenPreviewKey] = (0, react_1.useState)(undefined);\n  const isStackAnimationDisabled = openPreviewKey !== undefined;\n  return _reactJsxDevRuntime.jsxDEV(LinkPreviewContext.Provider, {\n    value: {\n      isStackAnimationDisabled,\n      openPreviewKey,\n      setOpenPreviewKey\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 13\n  }, this);\n}\n_c = LinkPreviewContextProvider;\nconst useLinkPreviewContext = () => {\n  const context = (0, react_1.use)(LinkPreviewContext);\n  if (context == null) {\n    throw new Error('useLinkPreviewContext must be used within a LinkPreviewContextProvider. This is likely a bug in Expo Router.');\n  }\n  return context;\n};\nexports.useLinkPreviewContext = useLinkPreviewContext;\nvar _c;\n$RefreshReg$(_c, \"LinkPreviewContextProvider\");","map":{"version":3,"names":["exports","LinkPreviewContextProvider","react_1","require","LinkPreviewContext","createContext","undefined","children","openPreviewKey","setOpenPreviewKey","useState","isStackAnimationDisabled","_reactJsxDevRuntime","jsxDEV","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","useLinkPreviewContext","context","use","Error","$RefreshReg$"],"sources":["/Users/edward/Documents/TeleMed/TeleMed/node_modules/expo-router/src/link/preview/LinkPreviewContext.tsx"],"sourcesContent":["import { createContext, PropsWithChildren, use, useState } from 'react';\n\nconst LinkPreviewContext = createContext<\n  | {\n      isStackAnimationDisabled: boolean;\n      openPreviewKey: string | undefined;\n      setOpenPreviewKey: (openPreviewKey: string | undefined) => void;\n    }\n  | undefined\n>(undefined);\n\nexport function LinkPreviewContextProvider({ children }: PropsWithChildren) {\n  const [openPreviewKey, setOpenPreviewKey] = useState<string | undefined>(undefined);\n  const isStackAnimationDisabled = openPreviewKey !== undefined;\n  return (\n    <LinkPreviewContext.Provider\n      value={{ isStackAnimationDisabled, openPreviewKey, setOpenPreviewKey }}>\n      {children}\n    </LinkPreviewContext.Provider>\n  );\n}\n\nexport const useLinkPreviewContext = () => {\n  const context = use(LinkPreviewContext);\n  if (context == null) {\n    throw new Error(\n      'useLinkPreviewContext must be used within a LinkPreviewContextProvider. This is likely a bug in Expo Router.'\n    );\n  }\n  return context;\n};\n"],"mappings":";;;;;;;;AAWAA,OAAA,CAAAC,0BAAA,GAAAA,0BAAA;AAXA,MAAAC,OAAA,GAAAC,OAAA;AAEA,MAAMC,kBAAkB,GAAG,IAAAF,OAAA,CAAAG,aAAa,EAOtCC,SAAS,CAAC;AAEZ,SAAgBL,0BAA0BA,CAAC;EAAEM;AAAQ,CAAqB;EACxE,MAAM,CAACC,cAAc,EAAEC,iBAAiB,CAAC,GAAG,IAAAP,OAAA,CAAAQ,QAAQ,EAAqBJ,SAAS,CAAC;EACnF,MAAMK,wBAAwB,GAAGH,cAAc,KAAKF,SAAS;EAC7D,OACEM,mBAAA,CAAAC,MAAA,CAACT,kBAAkB,CAACU,QAAQ;IAC1BC,KAAK,EAAE;MAAEJ,wBAAwB;MAAEH,cAAc;MAAEC;IAAiB,CAAG;IAAAF,QAAA,EACtEA;EAAQ;IAAAS,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACkB,CAAC;AAElC;AAACC,EAAA,GATenB,0BAA0B;AAWnC,MAAMoB,qBAAqB,GAAGA,CAAA,KAAK;EACxC,MAAMC,OAAO,GAAG,IAAApB,OAAA,CAAAqB,GAAG,EAACnB,kBAAkB,CAAC;EACvC,IAAIkB,OAAO,IAAI,IAAI,EAAE;IACnB,MAAM,IAAIE,KAAK,CACb,8GAA8G,CAC/G;EACH;EACA,OAAOF,OAAO;AAChB,CAAC;AARYtB,OAAA,CAAAqB,qBAAqB,GAAAA,qBAAA;AAQhC,IAAAD,EAAA;AAAAK,YAAA,CAAAL,EAAA","ignoreList":[]},"metadata":{"hasCjsExports":true},"sourceType":"script","externalDependencies":[]}