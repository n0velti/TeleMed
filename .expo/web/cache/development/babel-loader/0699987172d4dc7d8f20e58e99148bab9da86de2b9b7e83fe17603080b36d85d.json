{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.hide = hide;\nexports.hideAsync = hideAsync;\nexports.preventAutoHideAsync = preventAutoHideAsync;\nexports._internal_preventAutoHideAsync = _internal_preventAutoHideAsync;\nexports._internal_maybeHideAsync = _internal_maybeHideAsync;\nconst expo_1 = require(\"expo\");\nconst SplashModule = (0, expo_1.requireOptionalNativeModule)('ExpoSplashScreen');\nlet _initializedErrorHandler = false;\nfunction hide() {\n  if (!SplashModule) {\n    return;\n  }\n  SplashModule.hide();\n}\nasync function hideAsync() {\n  hide();\n}\nasync function preventAutoHideAsync() {\n  if (!SplashModule) {\n    return;\n  }\n  return SplashModule.preventAutoHideAsync();\n}\nasync function _internal_preventAutoHideAsync() {\n  if (!SplashModule || !SplashModule.internalPreventAutoHideAsync) {\n    return false;\n  }\n  if (!_initializedErrorHandler) {\n    if (ErrorUtils?.getGlobalHandler) {\n      const originalHandler = ErrorUtils.getGlobalHandler();\n      ErrorUtils.setGlobalHandler((error, isFatal) => {\n        hide();\n        originalHandler(error, isFatal);\n      });\n    }\n    _initializedErrorHandler = true;\n  }\n  return SplashModule.internalPreventAutoHideAsync();\n}\nasync function _internal_maybeHideAsync() {\n  if (!SplashModule || !SplashModule.internalMaybeHideAsync) {\n    return false;\n  }\n  return SplashModule.internalMaybeHideAsync();\n}","map":{"version":3,"names":["exports","hide","hideAsync","preventAutoHideAsync","_internal_preventAutoHideAsync","_internal_maybeHideAsync","expo_1","require","SplashModule","requireOptionalNativeModule","_initializedErrorHandler","internalPreventAutoHideAsync","ErrorUtils","getGlobalHandler","originalHandler","setGlobalHandler","error","isFatal","internalMaybeHideAsync"],"sources":["/Users/edward/Documents/TeleMed/TeleMed/node_modules/expo-router/src/utils/splash.ts"],"sourcesContent":["import { requireOptionalNativeModule } from 'expo';\n\nconst SplashModule = requireOptionalNativeModule('ExpoSplashScreen');\n\nlet _initializedErrorHandler = false;\n\nexport function hide() {\n  if (!SplashModule) {\n    return;\n  }\n\n  SplashModule.hide();\n}\n\nexport async function hideAsync(): Promise<void> {\n  hide();\n}\n\nexport async function preventAutoHideAsync() {\n  if (!SplashModule) {\n    return;\n  }\n\n  return SplashModule.preventAutoHideAsync();\n}\n\nexport async function _internal_preventAutoHideAsync(): Promise<boolean> {\n  // The internal function might be missing if an app is using an older version of the SplashModule\n  if (!SplashModule || !SplashModule.internalPreventAutoHideAsync) {\n    return false;\n  }\n\n  if (!_initializedErrorHandler) {\n    // Append error handling to ensure any uncaught exceptions result in the splash screen being hidden.\n    // This prevents the splash screen from floating over error screens.\n    if (ErrorUtils?.getGlobalHandler) {\n      const originalHandler = ErrorUtils.getGlobalHandler();\n      ErrorUtils.setGlobalHandler((error, isFatal) => {\n        hide();\n        originalHandler(error, isFatal);\n      });\n    }\n\n    _initializedErrorHandler = true;\n  }\n\n  return SplashModule.internalPreventAutoHideAsync();\n}\n\nexport async function _internal_maybeHideAsync() {\n  // The internal function might be missing if an app is using an older version of the SplashModule\n  if (!SplashModule || !SplashModule.internalMaybeHideAsync) {\n    return false;\n  }\n\n  return SplashModule.internalMaybeHideAsync();\n}\n"],"mappings":";;;;;AAMAA,OAAA,CAAAC,IAAA,GAAAA,IAAA;AAQAD,OAAA,CAAAE,SAAA,GAAAA,SAAA;AAIAF,OAAA,CAAAG,oBAAA,GAAAA,oBAAA;AAQAH,OAAA,CAAAI,8BAAA,GAAAA,8BAAA;AAuBAJ,OAAA,CAAAK,wBAAA,GAAAA,wBAAA;AAjDA,MAAAC,MAAA,GAAAC,OAAA;AAEA,MAAMC,YAAY,GAAG,IAAAF,MAAA,CAAAG,2BAA2B,EAAC,kBAAkB,CAAC;AAEpE,IAAIC,wBAAwB,GAAG,KAAK;AAEpC,SAAgBT,IAAIA,CAAA;EAClB,IAAI,CAACO,YAAY,EAAE;IACjB;EACF;EAEAA,YAAY,CAACP,IAAI,EAAE;AACrB;AAEO,eAAeC,SAASA,CAAA;EAC7BD,IAAI,EAAE;AACR;AAEO,eAAeE,oBAAoBA,CAAA;EACxC,IAAI,CAACK,YAAY,EAAE;IACjB;EACF;EAEA,OAAOA,YAAY,CAACL,oBAAoB,EAAE;AAC5C;AAEO,eAAeC,8BAA8BA,CAAA;EAElD,IAAI,CAACI,YAAY,IAAI,CAACA,YAAY,CAACG,4BAA4B,EAAE;IAC/D,OAAO,KAAK;EACd;EAEA,IAAI,CAACD,wBAAwB,EAAE;IAG7B,IAAIE,UAAU,EAAEC,gBAAgB,EAAE;MAChC,MAAMC,eAAe,GAAGF,UAAU,CAACC,gBAAgB,EAAE;MACrDD,UAAU,CAACG,gBAAgB,CAAC,CAACC,KAAK,EAAEC,OAAO,KAAI;QAC7ChB,IAAI,EAAE;QACNa,eAAe,CAACE,KAAK,EAAEC,OAAO,CAAC;MACjC,CAAC,CAAC;IACJ;IAEAP,wBAAwB,GAAG,IAAI;EACjC;EAEA,OAAOF,YAAY,CAACG,4BAA4B,EAAE;AACpD;AAEO,eAAeN,wBAAwBA,CAAA;EAE5C,IAAI,CAACG,YAAY,IAAI,CAACA,YAAY,CAACU,sBAAsB,EAAE;IACzD,OAAO,KAAK;EACd;EAEA,OAAOV,YAAY,CAACU,sBAAsB,EAAE;AAC9C","ignoreList":[]},"metadata":{"hasCjsExports":true},"sourceType":"script","externalDependencies":[]}