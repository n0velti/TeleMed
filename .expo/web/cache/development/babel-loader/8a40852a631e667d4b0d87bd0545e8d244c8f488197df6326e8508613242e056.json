{"ast":null,"code":"\"use strict\";\n\nvar _reactJsxDevRuntime = require(\"react/jsx-dev-runtime\");\nvar _jsxFileName = \"/Users/edward/Documents/TeleMed/TeleMed/node_modules/expo-router/build/renderRootComponent.js\";\nvar __createBinding = this && this.__createBinding || (Object.create ? function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  var desc = Object.getOwnPropertyDescriptor(m, k);\n  if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n    desc = {\n      enumerable: true,\n      get: function () {\n        return m[k];\n      }\n    };\n  }\n  Object.defineProperty(o, k2, desc);\n} : function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  o[k2] = m[k];\n});\nvar __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function (o, v) {\n  Object.defineProperty(o, \"default\", {\n    enumerable: true,\n    value: v\n  });\n} : function (o, v) {\n  o[\"default\"] = v;\n});\nvar __importStar = this && this.__importStar || function () {\n  var ownKeys = function (o) {\n    ownKeys = Object.getOwnPropertyNames || function (o) {\n      var ar = [];\n      for (var k in o) if (Object.prototype.hasOwnProperty.call(o, k)) ar[ar.length] = k;\n      return ar;\n    };\n    return ownKeys(o);\n  };\n  return function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k = ownKeys(mod), i = 0; i < k.length; i++) if (k[i] !== \"default\") __createBinding(result, mod, k[i]);\n    __setModuleDefault(result, mod);\n    return result;\n  };\n}();\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.renderRootComponent = renderRootComponent;\nconst expo_1 = require(\"expo\");\nconst React = __importStar(require(\"react\"));\nconst react_native_1 = require(\"react-native-web/dist/index\");\nconst SplashScreen = __importStar(require(\"./utils/splash\"));\nfunction isBaseObject(obj) {\n  if (Object.prototype.toString.call(obj) !== '[object Object]') {\n    return false;\n  }\n  const proto = Object.getPrototypeOf(obj);\n  if (proto === null) {\n    return true;\n  }\n  return proto === Object.prototype;\n}\nfunction isErrorShaped(error) {\n  return error && typeof error === 'object' && typeof error.name === 'string' && typeof error.message === 'string';\n}\nfunction convertError(error) {\n  if (isErrorShaped(error)) {\n    return error;\n  }\n  if (process.env.NODE_ENV === 'development') {\n    if (error == null) {\n      return new Error('A null/undefined error was thrown.');\n    }\n  }\n  if (isBaseObject(error)) {\n    return new Error(JSON.stringify(error));\n  }\n  return new Error(String(error));\n}\nfunction renderRootComponent(Component) {\n  try {\n    setTimeout(() => {\n      SplashScreen._internal_preventAutoHideAsync?.();\n    });\n    React.startTransition(() => {\n      if (process.env.NODE_ENV !== 'production') {\n        const {\n          withErrorOverlay\n        } = require('@expo/metro-runtime/error-overlay');\n        (0, expo_1.registerRootComponent)(withErrorOverlay(Component));\n      } else {\n        (0, expo_1.registerRootComponent)(Component);\n      }\n    });\n  } catch (e) {\n    SplashScreen.hideAsync();\n    const error = convertError(e);\n    (0, expo_1.registerRootComponent)(() => _reactJsxDevRuntime.jsxDEV(react_native_1.View, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 49\n    }, this));\n    if (true) {\n      console.error(error);\n      console.error(`A runtime error has occurred while rendering the root component.`);\n    }\n    setTimeout(() => {\n      throw error;\n    });\n  }\n}","map":{"version":3,"names":["exports","renderRootComponent","expo_1","require","React","__importStar","react_native_1","SplashScreen","isBaseObject","obj","Object","prototype","toString","call","proto","getPrototypeOf","isErrorShaped","error","name","message","convertError","process","env","NODE_ENV","Error","JSON","stringify","String","Component","setTimeout","_internal_preventAutoHideAsync","startTransition","withErrorOverlay","registerRootComponent","e","hideAsync","_reactJsxDevRuntime","jsxDEV","View","fileName","_jsxFileName","lineNumber","columnNumber","console"],"sources":["/Users/edward/Documents/TeleMed/TeleMed/node_modules/expo-router/src/renderRootComponent.tsx"],"sourcesContent":["import { registerRootComponent } from 'expo';\nimport * as React from 'react';\nimport { View } from 'react-native';\n\nimport * as SplashScreen from './utils/splash';\n\nfunction isBaseObject(obj: any) {\n  if (Object.prototype.toString.call(obj) !== '[object Object]') {\n    return false;\n  }\n  const proto = Object.getPrototypeOf(obj);\n  if (proto === null) {\n    return true;\n  }\n  return proto === Object.prototype;\n}\n\nfunction isErrorShaped(error: any): error is Error {\n  return (\n    error &&\n    typeof error === 'object' &&\n    typeof error.name === 'string' &&\n    typeof error.message === 'string'\n  );\n}\n\n/**\n * After we throw this error, any number of tools could handle it.\n * This check ensures the error is always in a reason state before surfacing it to the runtime.\n */\nfunction convertError(error: any) {\n  if (isErrorShaped(error)) {\n    return error;\n  }\n\n  if (process.env.NODE_ENV === 'development') {\n    if (error == null) {\n      return new Error('A null/undefined error was thrown.');\n    }\n  }\n\n  if (isBaseObject(error)) {\n    return new Error(JSON.stringify(error));\n  }\n\n  return new Error(String(error));\n}\n\n/**\n * Register and mount the root component using the predefined rendering\n * method. This function ensures the Splash Screen and errors are handled correctly.\n */\nexport function renderRootComponent(Component: React.ComponentType<any>) {\n  try {\n    // This must be delayed so the user has a chance to call it first.\n    setTimeout(() => {\n      SplashScreen._internal_preventAutoHideAsync?.();\n    });\n\n    React.startTransition(() => {\n      if (process.env.NODE_ENV !== 'production') {\n        const { withErrorOverlay } =\n          require('@expo/metro-runtime/error-overlay') as typeof import('@expo/metro-runtime/error-overlay');\n        registerRootComponent(withErrorOverlay(Component));\n      } else {\n        registerRootComponent(Component);\n      }\n    });\n  } catch (e) {\n    // Hide the splash screen if there was an error so the user can see it.\n    SplashScreen.hideAsync();\n\n    const error = convertError(e);\n    // Prevent the app from throwing confusing:\n    //  ERROR  Invariant Violation: \"main\" has not been registered. This can happen if:\n    // * Metro (the local dev server) is run from the wrong folder. Check if Metro is running, stop it and restart it in the current project.\n    // * A module failed to load due to an error and `AppRegistry.registerComponent` wasn't called.\n    registerRootComponent(() => <View />);\n\n    // Console is pretty useless on native, on web you get interactive stack traces.\n    if (process.env.EXPO_OS === 'web') {\n      console.error(error);\n      console.error(`A runtime error has occurred while rendering the root component.`);\n    }\n\n    // Give React a tick to render before throwing.\n    setTimeout(() => {\n      throw error;\n    });\n\n    // TODO: Render a production-only error screen.\n  }\n}\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAoDAA,OAAA,CAAAC,mBAAA,GAAAA,mBAAA;AApDA,MAAAC,MAAA,GAAAC,OAAA;AACA,MAAAC,KAAA,GAAAC,YAAA,CAAAF,OAAA;AAA+B,MAAAG,cAAA,GAAAH,OAAA;AAG/B,MAAAI,YAAA,GAAAF,YAAA,CAAAF,OAAA;AAEA,SAASK,YAAYA,CAACC,GAAQ;EAC5B,IAAIC,MAAM,CAACC,SAAS,CAACC,QAAQ,CAACC,IAAI,CAACJ,GAAG,CAAC,KAAK,iBAAiB,EAAE;IAC7D,OAAO,KAAK;EACd;EACA,MAAMK,KAAK,GAAGJ,MAAM,CAACK,cAAc,CAACN,GAAG,CAAC;EACxC,IAAIK,KAAK,KAAK,IAAI,EAAE;IAClB,OAAO,IAAI;EACb;EACA,OAAOA,KAAK,KAAKJ,MAAM,CAACC,SAAS;AACnC;AAEA,SAASK,aAAaA,CAACC,KAAU;EAC/B,OACEA,KAAK,IACL,OAAOA,KAAK,KAAK,QAAQ,IACzB,OAAOA,KAAK,CAACC,IAAI,KAAK,QAAQ,IAC9B,OAAOD,KAAK,CAACE,OAAO,KAAK,QAAQ;AAErC;AAMA,SAASC,YAAYA,CAACH,KAAU;EAC9B,IAAID,aAAa,CAACC,KAAK,CAAC,EAAE;IACxB,OAAOA,KAAK;EACd;EAEA,IAAII,OAAO,CAACC,GAAG,CAACC,QAAQ,KAAK,aAAa,EAAE;IAC1C,IAAIN,KAAK,IAAI,IAAI,EAAE;MACjB,OAAO,IAAIO,KAAK,CAAC,oCAAoC,CAAC;IACxD;EACF;EAEA,IAAIhB,YAAY,CAACS,KAAK,CAAC,EAAE;IACvB,OAAO,IAAIO,KAAK,CAACC,IAAI,CAACC,SAAS,CAACT,KAAK,CAAC,CAAC;EACzC;EAEA,OAAO,IAAIO,KAAK,CAACG,MAAM,CAACV,KAAK,CAAC,CAAC;AACjC;AAMA,SAAgBhB,mBAAmBA,CAAC2B,SAAmC;EACrE,IAAI;IAEFC,UAAU,CAAC,MAAK;MACdtB,YAAY,CAACuB,8BAA8B,GAAE,CAAE;IACjD,CAAC,CAAC;IAEF1B,KAAK,CAAC2B,eAAe,CAAC,MAAK;MACzB,IAAIV,OAAO,CAACC,GAAG,CAACC,QAAQ,KAAK,YAAY,EAAE;QACzC,MAAM;UAAES;QAAgB,CAAE,GACxB7B,OAAO,CAAC,mCAAmC,CAAuD;QACpG,IAAAD,MAAA,CAAA+B,qBAAqB,EAACD,gBAAgB,CAACJ,SAAS,CAAC,CAAC;MACpD,CAAC,MAAM;QACL,IAAA1B,MAAA,CAAA+B,qBAAqB,EAACL,SAAS,CAAC;MAClC;IACF,CAAC,CAAC;EACJ,CAAC,CAAC,OAAOM,CAAC,EAAE;IAEV3B,YAAY,CAAC4B,SAAS,EAAE;IAExB,MAAMlB,KAAK,GAAGG,YAAY,CAACc,CAAC,CAAC;IAK7B,IAAAhC,MAAA,CAAA+B,qBAAqB,EAAC,MAAMG,mBAAA,CAAAC,MAAA,CAAC/B,cAAA,CAAAgC,IAAI;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAG,CAAC;IAGrC,UAAmC;MACjCC,OAAO,CAAC1B,KAAK,CAACA,KAAK,CAAC;MACpB0B,OAAO,CAAC1B,KAAK,CAAC,kEAAkE,CAAC;IACnF;IAGAY,UAAU,CAAC,MAAK;MACd,MAAMZ,KAAK;IACb,CAAC,CAAC;EAGJ;AACF","ignoreList":[]},"metadata":{"hasCjsExports":true},"sourceType":"script","externalDependencies":[]}