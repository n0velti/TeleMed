{"ast":null,"code":"var _jsxFileName = \"/Users/edward/Documents/TeleMed/TeleMed/node_modules/@expo/metro-runtime/src/error-overlay/overlay/LogBoxInspectorCodeFrame.tsx\";\nimport React from 'react';\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { LogBoxInspectorSection } from './LogBoxInspectorSection';\nimport { Ansi } from '../UI/AnsiHighlight';\nimport { LogBoxButton } from '../UI/LogBoxButton';\nimport * as LogBoxStyle from '../UI/LogBoxStyle';\nimport { CODE_FONT } from '../UI/constants';\nimport { formatProjectFilePath } from '../formatProjectFilePath';\nimport openFileInEditor from '../modules/openFileInEditor';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function LogBoxInspectorCodeFrame({\n  codeFrame\n}) {\n  if (codeFrame == null) {\n    return null;\n  }\n  function getFileName() {\n    return formatProjectFilePath(\"/Users/edward/Documents/TeleMed/TeleMed\", codeFrame?.fileName);\n  }\n  function getLocation() {\n    const location = codeFrame?.location;\n    if (location != null) {\n      return ` (${location.row}:${location.column + 1})`;\n    }\n    return null;\n  }\n  return _jsxDEV(LogBoxInspectorSection, {\n    heading: \"Source\",\n    children: _jsxDEV(View, {\n      style: styles.box,\n      children: [_jsxDEV(View, {\n        style: styles.frame,\n        children: _jsxDEV(ScrollView, {\n          horizontal: true,\n          contentContainerStyle: {\n            flexDirection: 'column'\n          },\n          children: _jsxDEV(Ansi, {\n            style: styles.content,\n            text: codeFrame.content\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this), _jsxDEV(LogBoxButton, {\n        backgroundColor: {\n          default: 'transparent',\n          pressed: LogBoxStyle.getBackgroundDarkColor(1)\n        },\n        style: styles.button,\n        onPress: () => {\n          openFileInEditor(codeFrame.fileName, codeFrame.location?.row ?? 0);\n        },\n        children: _jsxDEV(Text, {\n          style: styles.fileText,\n          children: [getFileName(), getLocation()]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n}\n_c = LogBoxInspectorCodeFrame;\nconst styles = StyleSheet.create({\n  box: {\n    backgroundColor: LogBoxStyle.getBackgroundColor(),\n    borderWidth: 1,\n    borderColor: '#323232',\n    marginLeft: 10,\n    marginRight: 10,\n    marginTop: 5,\n    borderRadius: 3\n  },\n  frame: {\n    padding: 10,\n    borderBottomColor: LogBoxStyle.getTextColor(0.1),\n    borderBottomWidth: 1\n  },\n  button: {\n    paddingTop: 10,\n    paddingBottom: 10\n  },\n  content: {\n    flexDirection: 'column',\n    color: LogBoxStyle.getTextColor(1),\n    fontSize: 12,\n    includeFontPadding: false,\n    lineHeight: 20,\n    fontFamily: CODE_FONT\n  },\n  fileText: {\n    userSelect: 'none',\n    color: LogBoxStyle.getTextColor(0.5),\n    textAlign: 'center',\n    flex: 1,\n    fontSize: 16,\n    includeFontPadding: false,\n    fontFamily: CODE_FONT\n  }\n});\nvar _c;\n$RefreshReg$(_c, \"LogBoxInspectorCodeFrame\");","map":{"version":3,"names":["React","ScrollView","StyleSheet","Text","View","LogBoxInspectorSection","Ansi","LogBoxButton","LogBoxStyle","CODE_FONT","formatProjectFilePath","openFileInEditor","jsxDEV","_jsxDEV","LogBoxInspectorCodeFrame","codeFrame","getFileName","fileName","getLocation","location","row","column","heading","children","style","styles","box","frame","horizontal","contentContainerStyle","flexDirection","content","text","_jsxFileName","lineNumber","columnNumber","backgroundColor","default","pressed","getBackgroundDarkColor","button","onPress","fileText","_c","create","getBackgroundColor","borderWidth","borderColor","marginLeft","marginRight","marginTop","borderRadius","padding","borderBottomColor","getTextColor","borderBottomWidth","paddingTop","paddingBottom","color","fontSize","includeFontPadding","lineHeight","fontFamily","userSelect","textAlign","flex","$RefreshReg$"],"sources":["/Users/edward/Documents/TeleMed/TeleMed/node_modules/@expo/metro-runtime/src/error-overlay/overlay/LogBoxInspectorCodeFrame.tsx"],"sourcesContent":["/**\n * Copyright (c) 650 Industries.\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport { ScrollView, StyleSheet, Text, View } from 'react-native';\n\nimport { LogBoxInspectorSection } from './LogBoxInspectorSection';\nimport type { CodeFrame } from '../Data/parseLogBoxLog';\nimport { Ansi } from '../UI/AnsiHighlight';\nimport { LogBoxButton } from '../UI/LogBoxButton';\nimport * as LogBoxStyle from '../UI/LogBoxStyle';\nimport { CODE_FONT } from '../UI/constants';\nimport { formatProjectFilePath } from '../formatProjectFilePath';\nimport openFileInEditor from '../modules/openFileInEditor';\n\ndeclare const process: any;\n\nexport function LogBoxInspectorCodeFrame({ codeFrame }: { codeFrame?: CodeFrame }) {\n  if (codeFrame == null) {\n    return null;\n  }\n\n  function getFileName() {\n    return formatProjectFilePath(process.env.EXPO_PROJECT_ROOT, codeFrame?.fileName);\n  }\n\n  function getLocation() {\n    const location = codeFrame?.location;\n    if (location != null) {\n      return ` (${location.row}:${location.column + 1 /* Code frame columns are zero indexed */})`;\n    }\n\n    return null;\n  }\n\n  return (\n    <LogBoxInspectorSection heading=\"Source\">\n      <View style={styles.box}>\n        <View style={styles.frame}>\n          <ScrollView\n            horizontal\n            contentContainerStyle={{\n              flexDirection: 'column',\n            }}>\n            <Ansi style={styles.content} text={codeFrame.content} />\n          </ScrollView>\n        </View>\n        <LogBoxButton\n          backgroundColor={{\n            default: 'transparent',\n            pressed: LogBoxStyle.getBackgroundDarkColor(1),\n          }}\n          style={styles.button}\n          onPress={() => {\n            openFileInEditor(codeFrame.fileName, codeFrame.location?.row ?? 0);\n          }}>\n          <Text style={styles.fileText}>\n            {getFileName()}\n            {getLocation()}\n          </Text>\n        </LogBoxButton>\n      </View>\n    </LogBoxInspectorSection>\n  );\n}\n\nconst styles = StyleSheet.create({\n  box: {\n    backgroundColor: LogBoxStyle.getBackgroundColor(),\n    borderWidth: 1,\n    borderColor: '#323232',\n    marginLeft: 10,\n    marginRight: 10,\n    marginTop: 5,\n    borderRadius: 3,\n  },\n  frame: {\n    padding: 10,\n    borderBottomColor: LogBoxStyle.getTextColor(0.1),\n    borderBottomWidth: 1,\n  },\n  button: {\n    paddingTop: 10,\n    paddingBottom: 10,\n  },\n  content: {\n    flexDirection: 'column',\n    color: LogBoxStyle.getTextColor(1),\n    fontSize: 12,\n    includeFontPadding: false,\n    lineHeight: 20,\n    fontFamily: CODE_FONT,\n  },\n  fileText: {\n    userSelect: 'none',\n    color: LogBoxStyle.getTextColor(0.5),\n    textAlign: 'center',\n    flex: 1,\n    fontSize: 16,\n    includeFontPadding: false,\n    fontFamily: CODE_FONT,\n  },\n});\n"],"mappings":"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","ignoreList":[]},"metadata":{"hasCjsExports":false},"sourceType":"module","externalDependencies":[]}